{"version":3,"sources":["ng://chart-lib/lib/chart-lib.service.ts","ng://chart-lib/lib/chart-lib.component.ts","ng://chart-lib/lib/simple-chart-config.ts","ng://chart-lib/lib/global-chart-colors.ts","ng://chart-lib/lib/global-chart-options.ts","ng://chart-lib/lib/bar-chart/bar-chart.component.ts","ng://chart-lib/lib/base-chart/base-chart.component.ts","ng://chart-lib/lib/box-plot-chart/box-plot-chart.component.ts","ng://chart-lib/lib/combined-chart/combined-category-chart.component.ts","ng://chart-lib/lib/combined-chart/combined-measure-chart.component.ts","ng://chart-lib/lib/line-chart/line-chart.component.ts","ng://chart-lib/lib/pie-chart/pie-chart.component.ts","ng://chart-lib/lib/scatter-chart/scatter-chart.component.ts","ng://chart-lib/lib/tree-layout-chart/tree-layout-chart.component.ts","ng://chart-lib/lib/variable-width-chart/variable-width-chart.component.ts","ng://chart-lib/lib/waterfall-chart/waterfall-chart.component.ts","ng://chart-lib/lib/waterfall-plugin-chart/waterfall-plugin-chart.component.ts","ng://chart-lib/lib/chart-lib.module.ts"],"names":["ChartLibService","Injectable","args","providedIn","ChartLibComponent","prototype","ngOnInit","Component","selector","template","SimpleChartConfig","this","isDisplayDataLabel","dataLabelAnchor","dataLabelAlign","yAxisLeftLabel","yAxisRightLabel","xAxisLabel","isDisplayLegend","legendPosition","isLegendPointStyle","isStacked","isDisplayYaxisLeftGrid","isDisplayYaxisRightGrid","isDisplayXaxisGrid","fontFamily","fontSize","fontColor","gridColor","isHorizontalBar","xAxisBeginAtZero","yAxisBeginAtZero","populateChartConfig","chartOptions","chartConfig","dataLabels","display","anchor","align","plugins","length","scales","yAxes","scaleLabel","labelString","gridLines","color","ticks","beginAtZero","push","position","xAxes","positionType","legend","labels","usePointStyle","stacked","GlobalChartColors","globalColors","backgroundColor","borderColor","borderWidth","pointRadius","pointHitRadius","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","cubicInterpolationMode","FONT_COLOR","GRID_COLOR","globalBackgroundColors","GlobalChartOptions","barChartOptions","responsive","FONT_FAMILY","FONT_SIZE","datalabels","scatterChartOptions","pieChartOptions","formatter","value","ctx","chart","data","dataIndex","waterfallChartOptions","xaxis","type","automargin","yaxis","margin","t","font","family","size","autosize","width","height","showlegend","paper_bgcolor","plot_bgcolor","boxPlotChartOptions","showgrid","gridcolor","gridwidth","lineChartOptions","id","annotation","combinedChartOptions","variableWidthChartOptions","peityPieOptions","delimiter","fill","radius","peityDonutOptions","innerRadius","peityLineOptions","max","min","stroke","strokeWidth","peityBarOptions","padding","BarChartComponent","barChartLabels","barChartLegend","barChartData","barChartPlugins","barChartColors","simpleChartConfig","chartClick","EventEmitter","chartHover","labelClick","chartType","Object","keys","pluginDataLabels","beforeInit","options","afterFit","chartClicked","_a","event","active","emit","$","getContext","barChart","base","chartArea","bottom","offset","top","window","scrollTop","pageY","count","paddingLeft","xwidth","paddingRight","barIndex","offsetX","Math","floor","dataLabel","chartHovered","Input","Output","ViewChild","BaseChartDirective","BaseChartComponent","opt","_this","assign","create","getPrototypeOf","onClick","hover","onHover","_options","_chart","Chart","canvasRef","nativeElement","chartObj","ngOnChanges","changes","ngOnDestroy","destroy","BoxPlotChartComponent","boxPlotData","boxPlotChartConfig","displayModeBar","displaylogo","modeBarButtonsToRemove","_this_1","boxPlotChartData","forEach","chartData","y","yValues","name","boxpoints","marker","markerColor","MouseEvent","chartAfterPlotted","d3.selectAll","selectAll","on","d","text","BoxPlotChartData","CombinedCategoryChartComponent","combinedChartLabels","combinedChartLegend","combinedChartData","combinedChartPlugins","combinedChartColors","combinedChart","CombinedMeasureChartComponent","pluginAnnotations","ChartAnnotation","update","LineChartComponent","lineChartLegend","lineChartColors","lineChartPlugins","lineChartData","lineChart","lineChartLabels","PieChartComponent","pieChartLabels","pieChartData","pieChartLegend","pieChartPlugins","pieChartColors","ScatterChartComponent","scatterChartColors","TreeLayoutChartComponent","selectedSegmentationIndex","root","svg","d3","select","append","attr","i","duration","treemap","tree","hierarchy","treeData","children","x0","y0","source","nodes","descendants","links","slice","console","log","depth","node","nodeEnter","enter","click","style","_children","nodeUpdate","merge","transition","x","nodeExit","exit","remove","link","linkEnter","insert","o","diagonal","linkUpdate","parent","s","path","index","VariableWidthChartComponent","generatedChartData","label","generatedChartColors","variableWidthChartLegend","limitLineColor","borderDash","volumeAllocaitonColors","buildChartData","variableWidthChartData","start","previousState","map","end","xValue","yValue","state","getVolumeAllocationColor","limitLineData","unshift","border","WaterfallChartComponent","waterfallData","waterfallChartConfig","dataProcessing","datasetIndex","comparedIndex","waterfallChartData","measures","xLabels","hoverinfos","waterfallItemData","itemData","hidden","measure","compared","itemlabel","waterfallExtendedChartData","extendedData","connectorColor","connectorWidth","orientation","textposition","connector","line","hoverinfo","decreasing","decreasingColor","increasing","increasingColor","totals","totalsColor","min_1","max_1","comparedValue_1","total","shapes","x1","y1","dash","xref","yref","opacity","fillcolor","annotations","ceil","showarrow","WaterfallChartData","WaterfallItemData","WaterfallPluginChartComponent","waterfallPlugin","waterFallPlugin","stepLines","enabled","adaptDataForPlugin","waterfallPluginChartData","adaptedData","currentTotal","v","idx","waterfall","dummyStack","stack","abs","datasets","PlotlyViaCDNModule","plotlyVersion","plotlyBundleNames","ChartLibModule","NgModule","declarations","imports","CommonModule","ChartsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chart-lib',\n  template: `\n    <p>\n      chart-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class ChartLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ChartOptions, PositionType } from 'chart.js';\n\n\nexport class SimpleChartConfig {\n\n  isDisplayDataLabel?: boolean = false;\n  dataLabelAnchor?: string = 'center';\n  dataLabelAlign?: string = 'center';\n  yAxisLeftLabel?: string = '';\n  yAxisRightLabel?: string = '';\n  xAxisLabel?: string = '';\n  isDisplayLegend?: boolean = true;\n  legendPosition?: string = 'top';\n  isLegendPointStyle?: boolean = false;\n  isStacked?: boolean = false;\n  isDisplayYaxisLeftGrid?: boolean = true;\n  isDisplayYaxisRightGrid?: boolean = false;\n  isDisplayXaxisGrid?: boolean = true;\n  fontFamily?: string = 'Helvetica Neue';\n  fontSize?: number = 12;\n  fontColor?: string = 'rgba(0,0,0,0.5)';\n  gridColor?: string = 'rgba(0,0,0,0.1)';\n  isHorizontalBar?: boolean = false;\n  xAxisBeginAtZero?: boolean = false;\n  yAxisBeginAtZero?: boolean = false;\n\n  public static populateChartConfig(chartOptions: ChartOptions, chartConfig: SimpleChartConfig): ChartOptions {\n\n    if (chartConfig.isDisplayDataLabel) {\n      let dataLabels = {\n        display: true,\n        anchor: chartConfig.dataLabelAnchor,\n        align: chartConfig.dataLabelAlign,\n      }\n      chartOptions.plugins = { dataLabels };\n    }\n\n    if (chartConfig.yAxisLeftLabel.length > 0) {\n      chartOptions.scales.yAxes[0].scaleLabel = {\n        display: true,\n        labelString: chartConfig.yAxisLeftLabel\n      };\n\n      chartOptions.scales.yAxes[0].gridLines = {\n        display: chartConfig.isDisplayYaxisLeftGrid,\n        color: chartConfig.gridColor\n      }\n\n      chartOptions.scales.yAxes[0].ticks = {\n        beginAtZero: chartConfig.yAxisBeginAtZero,\n        fontFamily: chartConfig.fontFamily,\n        fontSize: chartConfig.fontSize,\n        fontColor: chartConfig.fontColor,\n      }\n\n    }\n\n    if (chartConfig.yAxisRightLabel.length > 0) {\n      if (chartOptions.scales.yAxes.length == 1) {\n        chartOptions.scales.yAxes.push({\n          position: 'right',\n          gridLines: { display: chartConfig.isDisplayYaxisRightGrid },\n          scaleLabel: {\n            display: true,\n            labelString: chartConfig.yAxisRightLabel\n          },\n          ticks: {\n            beginAtZero: chartConfig.yAxisBeginAtZero,\n            fontFamily: chartConfig.fontFamily,\n            fontSize: chartConfig.fontSize,\n            fontColor: chartConfig.fontColor\n          }\n        });\n      }\n    }\n\n    if (chartConfig.xAxisLabel.length > 0) {\n      chartOptions.scales.xAxes[0].scaleLabel = {\n        display: true,\n        labelString: chartConfig.xAxisLabel\n      };\n\n      chartOptions.scales.xAxes[0].ticks = {\n        fontFamily: chartConfig.fontFamily,\n        fontSize: chartConfig.fontSize,\n        fontColor: chartConfig.fontColor\n      }\n\n    }\n\n    if (chartConfig.isDisplayLegend) {\n\n      let positionType: PositionType = 'top';\n      if (chartConfig.legendPosition == 'top') {\n        positionType = 'top';\n      } else if (chartConfig.legendPosition == 'bottom') {\n        positionType = 'bottom';\n      } else if (chartConfig.legendPosition == 'left') {\n        positionType = 'left';\n      } else if (chartConfig.legendPosition == 'right') {\n        positionType = 'right';\n      }\n      chartOptions.legend = {\n        display: true,\n        position: positionType\n      };\n    } else {\n      chartOptions.legend = {\n        display: false\n      };\n    }\n\n    if (chartConfig.isLegendPointStyle) {\n      if (!chartOptions.legend.labels) {\n        chartOptions.legend.labels = {};\n      }\n      chartOptions.legend.labels.usePointStyle = true;\n    }\n\n    if (chartConfig.isStacked) {\n      chartOptions.scales.yAxes[0].stacked = true;\n      chartOptions.scales.xAxes[0].stacked = true;\n    }\n\n\n    return chartOptions;\n  }\n} ","\nexport class GlobalChartColors {\n\n  public static FONT_COLOR = 'rgba(0,0,0,0.5)';\n  public static GRID_COLOR = 'rgba(0,0,0,0.1)';\n\n  public static globalBackgroundColors: Array<string> = [\n    'rgba(36,123,160,0.6)',\n    'rgba(112,193,179,0.6)',\n    'rgba(235,84,124,0.6)',\n    'rgba(229,227,24,0.6)',\n    'rgba(204,194,16,0.6)',\n    'rgba(107,76,154,0.6)',\n  ];\n\n  public globalColors: Array<any> = [\n    { // blue        \n      backgroundColor: 'rgba(36,123,160,0.6)',\n      borderColor: 'rgba(36,123,160,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n      cubicInterpolationMode: 'monotone',\n    },\n    { // purple    \n      backgroundColor: 'rgba(107,76,154,0.6)',\n      borderColor: 'rgba(69,49,99,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n    },\n    { // green\n      backgroundColor: 'rgba(112,193,179,0.6)',\n      borderColor: 'rgba(112,193,179,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n\n    },\n    { // red\n      backgroundColor: 'rgba(235,84,124,0.6)',\n      borderColor: 'rgba(235,84,124,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n    },\n    { // yellow\n\n      backgroundColor: 'rgba(229,227,24,0.6)',\n      borderColor: 'rgba(229,227,24,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n\n    },\n    { // earth        \n      backgroundColor: 'rgba(204,194,16,0.6)',\n      borderColor: 'rgba(121,115,9,1.0)',\n      borderWidth: 1,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n    }\n  ];\n\n}","import { ChartOptions } from 'chart.js';\nimport { GlobalChartColors } from './global-chart-colors';\n\nexport class GlobalChartOptions {\n\n  public static FONT_FAMILY = 'Helvetica Neue';\n  public static FONT_SIZE = 12;\n\n  public peityPieOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: null,\n      fill: GlobalChartColors.globalBackgroundColors,\n      height: height,\n      radius: 8,\n      width: width\n    }\n    return options;\n  }\n\n  public peityDonutOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: null,\n      fill: GlobalChartColors.globalBackgroundColors,\n      height: height,\n      innerRadius: null,\n      radius: 8,\n      width: width\n    }\n    return options;\n  }\n\n  public peityLineOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: \",\",\n      fill: GlobalChartColors.globalBackgroundColors[0],\n      max: null,\n      min: 0,\n      stroke: GlobalChartColors.globalBackgroundColors[1],\n      strokeWidth: 1,\n      height: height,\n      width: width\n    }\n    return options;\n  }\n\n  public peityBarOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: \",\",\n      fill: [GlobalChartColors.globalBackgroundColors[0]],\n      max: null,\n      min: 0,\n      padding: 0.1,\n      height: height,\n      width: width\n    }\n    return options;\n  }\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [{\n\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }]\n    },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n\n  public scatterChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }]\n    },\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },\n  };\n\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = ctx.chart.data.labels[ctx.dataIndex];\n          return label;\n        },\n      },\n    }\n  };\n\n  public waterfallChartOptions: any = {\n\n    xaxis: {\n      type: 'category',\n      automargin: true\n    },\n    yaxis: {\n      type: 'linear',\n      automargin: true\n    },\n    margin: {\n      t: 60,\n    },\n    font: {\n      family: GlobalChartOptions.FONT_FAMILY,\n      size: GlobalChartOptions.FONT_SIZE,\n      color: GlobalChartColors.FONT_COLOR\n    },\n    autosize: false,\n    width: 1150,\n    height: 800,\n    showlegend: false,\n    paper_bgcolor: 'rgba(0,0,0,0)',\n    plot_bgcolor: 'rgba(0,0,0,0)'\n  };\n\n  public boxPlotChartOptions: any = {\n\n    xaxis: {\n      type: 'category',\n      showgrid: false,\n      automargin: true\n    },\n    yaxis: {\n      type: 'linear',\n      showgrid: true,\n      automargin: true,\n      gridcolor: GlobalChartColors.GRID_COLOR,\n      gridwidth: 1\n    },\n    font: {\n      family: GlobalChartOptions.FONT_FAMILY,\n      size: GlobalChartOptions.FONT_SIZE,\n      color: GlobalChartColors.FONT_COLOR\n    },\n    autosize: true,\n    showlegend: false,\n    paper_bgcolor: 'rgba(0,0,0,0)',\n    plot_bgcolor: 'rgba(0,0,0,0)'\n  };\n\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: true,\n        anchor: 'end',\n        align: 'end',\n      }\n    },\n    scales: {\n      xAxes: [{\n\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n\n      }],\n      yAxes: [{\n        id: 'y-axis-0',\n        position: 'left',\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      },\n      {\n        id: 'y-axis-1',\n        position: 'right',\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }\n      ]\n    },\n    annotation: {\n    },\n  };\n\n  public combinedChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },\n    scales: {\n      xAxes: [{\n\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [\n        {\n          id: 'y-axis-0',\n          position: 'left',\n          gridLines: {\n            color: GlobalChartColors.GRID_COLOR\n          },\n          ticks: {\n            fontFamily: GlobalChartOptions.FONT_FAMILY,\n            fontSize: GlobalChartOptions.FONT_SIZE,\n            fontColor: GlobalChartColors.FONT_COLOR,\n          }\n        }\n      ]\n    },\n    annotation: {\n    },\n  };\n\n  public variableWidthChartOptions: ChartOptions = {\n\n    responsive: true,\n    legend: {\n      display: false\n    },\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n        },\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [{\n        position: 'left',\n        gridLines: {\n          display: false\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }, {\n        position: 'right',\n        gridLines: { display: false },\n        scaleLabel: { display: false },\n        ticks: { display: false }\n      }],\n\n    }\n  };\n}","import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { ChartOptions, ChartDataSets } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport { SimpleChartConfig } from '../simple-chart-config';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n\n  @Input() barChartOptions: ChartOptions = {};  \n  @Input() barChartLabels: Label[] = [];\n  @Input() barChartLegend = true;\n  @Input() barChartData: ChartDataSets[] = [];\n  @Input() barChartPlugins: any[] = [];\n  @Input() barChartColors: Array<any> = []\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  chartType: string = 'bar';\n  \n  constructor() { \n  }\n\n  ngOnInit() {\n\n    if (!this.barChartColors || Object.keys(this.barChartColors).length == 0) {\n      this.barChartColors = new GlobalChartColors().globalColors;\n    }\n\n    if (!this.barChartOptions || Object.keys(this.barChartOptions).length == 0) {\n      this.barChartOptions = new GlobalChartOptions().barChartOptions;\n      \n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {\n        if (!this.simpleChartConfig.isHorizontalBar) {\n          this.chartType = 'bar';\n        } else {\n          this.chartType = 'horizontalBar';\n        }\n        this.barChartOptions = SimpleChartConfig.populateChartConfig(this.barChartOptions, this.simpleChartConfig);\n      }\n    }    \n    \n    this.barChartPlugins.push(pluginDataLabels);\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.barChartPlugins.push(chartPlugin);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#barChart')[0].getContext(\"2d\");\n    var barChart: any = this.chart.chart;\n    var base = barChart.chartArea.bottom;    \n    var height = barChart.height;\n    var width = barChart.scales['x-axis-0'].width;\n    var offset = $('#barChart').offset().top - $(window).scrollTop();\n    \n\n    if (event.pageY > base + offset) {\n      var count = barChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = barChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = barChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - barChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.barChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }\n  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport * as Chart from 'chart.js';\n\n@Component({\n  selector: 'lib-base-chart',\n  templateUrl: './base-chart.component.html'\n})\nexport class BaseChartComponent implements OnInit, OnDestroy, OnChanges {\n  \n  @ViewChild('chartCanvas') canvasRef: ElementRef;\n\n  @Input() type: Chart.ChartType;\n  @Input() data: Chart.ChartData;\n  @Input() options: Chart.ChartOptions;\n  @Input() plugins: any;\n\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\n\n  private _options: Chart.ChartOptions;\n  private _chart: Chart;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n    if (this.options) {\n\n      const opt = Object.assign(Object.create(Object.getPrototypeOf(this.options)), this.options);\n\n      opt.onClick = (event?: MouseEvent, active?: {}[]) => {        \n        this.chartClicked(event, active);        \n      };\n\n      opt.hover = opt.hover || {};\n      opt.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        this.chartHovered(event, active);      \n      };      \n      this._options = opt;\n\n    } else {\n      \n      const opt: Chart.ChartOptions = {};\n      opt.onClick = (event?: MouseEvent, active?: {}[]) => {        \n        this.chartClicked(event, active);\n      };\n\n      opt.hover = opt.hover || {};\n      opt.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        this.chartHovered(event, active);        \n      };\n\n      this._options = opt;\n    }\n\n    this._chart = new Chart(this.canvasRef.nativeElement, {\n      type: this.type,\n      data: this.data,\n      options: this._options,\n      plugins: this.plugins      \n    });\n  }\n\n  private chartClicked(event: MouseEvent, chartObj: any) {\n    this.chartClick.emit(chartObj);\n  }\n\n  private chartHovered(event: MouseEvent, chartObj: any) {\n    this.chartHover.emit(chartObj);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  ngOnDestroy(): void {\n    if (this._chart) {\n      this._chart.destroy();\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport * as d3 from 'd3';\nimport { GlobalChartColors } from '../global-chart-colors';\n\n@Component({\n  selector: 'lib-box-plot-chart',\n  templateUrl: './box-plot-chart.component.html',\n  styleUrls: ['./box-plot-chart.component.scss']\n})\nexport class BoxPlotChartComponent implements OnInit {\n  \n  @Input() boxPlotChartOptions: any = {};\n  @Input() boxPlotChartData: BoxPlotChartData[];\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();  \n  \n  boxPlotData: any[] = [];  \n  \n  boxPlotChartConfig: any = {\n    displayModeBar: false,\n    displaylogo: false,      \n    modeBarButtonsToRemove: ['pan2d', 'lasso2d']\n  };\n\n  constructor() {      \n  }\n\n  ngOnInit() {\n\n    if (!this.boxPlotChartOptions || Object.keys(this.boxPlotChartOptions).length == 0) {\n      this.boxPlotChartOptions = new GlobalChartOptions().boxPlotChartOptions;\n    }    \n\n    this.boxPlotChartData.forEach(chartData => {\n      let data = {\n        y: chartData.yValues,\n        name: chartData.name,\n        type: 'box',        \n        boxpoints: chartData.boxpoints,\n        marker: {color: chartData.markerColor}        \n      }\n\n      this.boxPlotData.push(data);\n    });                \n  }\n    \n  public chartClicked(event: any) {\n\n    if (!(event instanceof MouseEvent)) {\n      this.chartClick.emit(event);\n    }\n  }\n\n  public chartHovered(event: any) {\n  \n    this.chartHover.emit(event);\n  }\n    \n  public chartAfterPlotted(event: any) {\n      \n    let _this = this;  \n    d3.selectAll(\".xaxislayer-above\").selectAll('text').on(\"click\", function(d) {\n\n      _this.labelClick.emit(d.text);      \n    });\n  }\n\n}\n\nexport class BoxPlotChartData {\n\n  yValues: number[];\n  name: string;  \n  markerColor?: string = GlobalChartColors.globalBackgroundColors[0];  \n  boxpoints?: any = false;\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-combined-category-chart',\n  templateUrl: './combined-category-chart.component.html',\n  styleUrls: ['./combined-category-chart.component.scss']\n})\nexport class CombinedCategoryChartComponent implements OnInit {\n\n  @Input() combinedChartOptions: ChartOptions = {};\n  \n  @Input() combinedChartLabels: Label[] = [];\n  @Input() combinedChartLegend = true;\n  @Input() combinedChartData: ChartDataSets[] = [];\n  @Input() combinedChartPlugins: any[] = [];\n  @Input() combinedChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  \n  constructor() { \n\n  }\n\n  ngOnInit() {\n    \n    if (!this.combinedChartColors || Object.keys(this.combinedChartColors).length == 0) {\n      this.combinedChartColors = new GlobalChartColors().globalColors;\n    }\n    \n    if (!this.combinedChartOptions || Object.keys(this.combinedChartOptions).length == 0) {\n      this.combinedChartOptions = new GlobalChartOptions().barChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.combinedChartOptions = SimpleChartConfig.populateChartConfig(this.combinedChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n    this.combinedChartPlugins.push(pluginDataLabels);\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.combinedChartPlugins.push(chartPlugin);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#combinedChart')[0].getContext(\"2d\");\n    var combinedChart: any = this.chart.chart;\n    var base = combinedChart.chartArea.bottom;    \n    var height = combinedChart.height;\n    var width = combinedChart.scales['x-axis-0'].width;\n    var offset = $('#combinedChart').offset().top - $(window).scrollTop();\n    \n\n    if (event.pageY > base + offset) {\n      var count = combinedChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = combinedChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = combinedChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - combinedChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.combinedChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport * as pluginAnnotations from 'chartjs-plugin-datalabels';\nimport { SimpleChartConfig } from '../simple-chart-config';\nimport * as ChartAnnotation from 'chartjs-plugin-annotation';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-combined-measure-chart',\n  templateUrl: './combined-measure-chart.component.html',\n  styleUrls: ['./combined-measure-chart.component.scss']\n})\nexport class CombinedMeasureChartComponent implements OnInit, OnChanges {\n\n  @Input() combinedChartOptions: ChartOptions = {};\n\n  @Input() combinedChartLabels: Label[] = [];\n  @Input() combinedChartLegend = true;\n  @Input() combinedChartData: ChartDataSets[] = [];\n  @Input() combinedChartPlugins: any[] = [];\n  @Input() combinedChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n\n  constructor() {\n\n    if (!this.combinedChartColors || Object.keys(this.combinedChartColors).length == 0) {\n      this.combinedChartColors = new GlobalChartColors().globalColors;\n    }\n    if (!this.combinedChartOptions || Object.keys(this.combinedChartOptions).length == 0) {\n      this.combinedChartOptions = new GlobalChartOptions().combinedChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {\n        this.combinedChartOptions = SimpleChartConfig.populateChartConfig(this.combinedChartOptions,\n          this.simpleChartConfig);\n      }\n    }\n  }\n\n  ngOnInit() {\n\n    this.combinedChartPlugins.push(pluginAnnotations);\n    this.combinedChartPlugins.push(ChartAnnotation);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['combinedChartData']) {\n      if (this.combinedChartData == null) {\n        return;\n      }\n\n      this.chart.update();\n    }\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#combinedChart')[0].getContext(\"2d\");\n    var combinedChart: any = this.chart.chart;\n    var base = combinedChart.chartArea.bottom;\n    var height = combinedChart.height;\n    var width = combinedChart.scales['x-axis-0'].width;\n    var offset = $('#combinedChart').offset().top - $(window).scrollTop();\n\n\n    if (event.pageY > base + offset) {\n      var count = combinedChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = combinedChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = combinedChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n\n      var barIndex = (event.offsetX - paddingLeft - combinedChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.combinedChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n\n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { BaseChartDirective, Label } from 'ng2-charts';\nimport { SimpleChartConfig } from '../simple-chart-config';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit, OnChanges {\n\n  @Input() lineChartOptions: ChartOptions = {};\n  @Input() lineChartLabels: Label[];\n  @Input() lineChartLegend = true;\n  @Input() lineChartData: ChartDataSets[];  \n  @Input() lineChartColors: Array<any> = [];\n  @Input() lineChartPlugins: any[] = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n\n  constructor() {\n    \n    if (!this.lineChartColors || Object.keys(this.lineChartColors).length == 0) {\n      this.lineChartColors = new GlobalChartColors().globalColors;\n\n      this.lineChartColors.forEach(color => {\n        color['fill'] = false;\n        color['cubicInterpolationMode'] = 'monotone';\n        color['lineTension'] = 1;\n        color['pointRadius'] = 3;\n        color['pointHoverRadius'] = 3;\n      });  \n    }\n          \n    if (!this.lineChartOptions || Object.keys(this.lineChartOptions).length == 0) {\n      this.lineChartOptions = new GlobalChartOptions().lineChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.lineChartOptions = SimpleChartConfig.populateChartConfig(this.lineChartOptions, \n          this.simpleChartConfig);\n      }\n    }\n\n    \n  }\n\n  ngOnInit() {\n    this.lineChartPlugins.push(pluginDataLabels);\n\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.lineChartPlugins.push(chartPlugin);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['lineChartData']) {\n      if (this.lineChartData == null) {\n        return;\n      }\n\n      this.chart.update();\n    }\n  }\n\n  public update() {\n    this.chart.update();\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n\n    var ctx = $('#lineChart')[0].getContext(\"2d\");\n    var lineChart: any = this.chart.chart;\n    var base = lineChart.chartArea.bottom;    \n    var height = lineChart.height;\n    var width = lineChart.scales['x-axis-0'].width;\n    var offset = $('#lineChart').offset().top - $(window).scrollTop();\n    \n    if (event.pageY > base + offset) {\n      var count = lineChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = lineChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = lineChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - lineChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.lineChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }\n  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label, Color } from 'ng2-charts';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\n\n@Component({\n  selector: 'lib-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n\n  @Input() pieChartOptions: ChartOptions = {};\n  @Input() pieChartLabels: Label[] = [];\n  @Input() pieChartData: number[] = [];\n  @Input() pieChartLegend = true;\n  @Input() pieChartPlugins: any[] = [];\n  @Input() pieChartColors: Array<any> = [];  \n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    if (!this.pieChartColors || Object.keys(this.pieChartColors).length == 0) {\n      this.pieChartColors = [{   \n          backgroundColor: [],\n        }];  \n      let globalColors = new GlobalChartColors().globalColors;\n      globalColors.forEach(color => {\n        this.pieChartColors[0].backgroundColor.push(color.backgroundColor);\n      });\n    }\n\n    if (!this.pieChartOptions || Object.keys(this.pieChartOptions).length == 0) {\n      this.pieChartOptions = new GlobalChartOptions().pieChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.pieChartOptions = SimpleChartConfig.populateChartConfig(this.pieChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n  }\n\n  ngOnInit() {\n    if (!this.pieChartPlugins) {\n      this.pieChartPlugins = [];\n    }\n    this.pieChartPlugins.push(pluginDataLabels);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { ChartOptions, ChartDataSets, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\n\n@Component({\n  selector: 'lib-scatter-chart',\n  templateUrl: './scatter-chart.component.html',\n  styleUrls: ['./scatter-chart.component.scss']\n})\nexport class ScatterChartComponent implements OnInit {\n\n  @Input() scatterChartOptions: ChartOptions = {};\n  @Input() scatterChartLabels: Label[];\n  @Input() scatterChartData: ChartDataSets[];\n  @Input() scatterChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n  \n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  \n  constructor() { \n\n    if (!this.scatterChartColors || Object.keys(this.scatterChartColors).length == 0) {\n      this.scatterChartColors = new GlobalChartColors().globalColors;\n      this.scatterChartColors.forEach(color => {\n        color['pointRadius'] = 5;\n        color['pointHoverRadius'] = 5;\n      });\n    }\n\n    if (!this.scatterChartOptions || Object.keys(this.scatterChartOptions).length == 0) {\n      this.scatterChartOptions = new GlobalChartOptions().scatterChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.scatterChartOptions = SimpleChartConfig.populateChartConfig(this.scatterChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n  }\n\n  ngOnInit() {\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\ndeclare var d3: any;\ndeclare var window: any;\n\n@Component({\n  selector: 'lib-tree-layout-chart',\n  templateUrl: './tree-layout-chart.component.html',\n  styleUrls: ['./tree-layout-chart.component.scss']\n})\nexport class TreeLayoutChartComponent implements OnInit {\n\n  @Input() public selectedSegmentationIndex: number = -1;  \n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Input() treeData: any;\n        \n  constructor() { }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    // Set the dimensions and margins of the diagram\n    var margin = {top: 20, right: 90, bottom: 30, left: 90},\n    width = 960 - margin.left - margin.right,\n    height = 700 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    // appends a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    var svg = d3.select(\"svg\")\n    //.attr(\"width\", width + margin.right + margin.left)\n    //.attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\"\n        + margin.left + \",\" + margin.top + \")\");\n\n    /*var aspect = width / height;\n    d3.select(window)\n    .on(\"resize\", function() {\n\n        var targetWidth = svg.node().getBoundingClientRect().width;\n        console.log(\"targetWidth : \" + targetWidth);\n        svg.attr(\"width\", targetWidth);\n        svg.attr(\"height\", targetWidth / aspect);\n    });*/\n\n    var i = 0,\n    duration = 750,\n    root;\n\n    // declares a tree layout and assigns the size\n    var treemap = d3.tree().size([height, width]);\n\n    // Assigns parent, children, height, depth\n    root = d3.hierarchy(this.treeData, function(d) { return d.children; });\n    root.x0 = height / 2;\n    root.y0 = 0;\n\n    // Collapse after the second level\n    //root.children.forEach(collapse);\n\n    update(root);\n\n    // Collapse the node and all it's children\n    function collapse(d) {\n      if(d.children) {\n          d._children = d.children\n          d._children.forEach(collapse)\n          d.children = null\n      }\n    }\n\n    function update(source) {\n\n      // Assigns the x and y position for the nodes\n      var treeData = treemap(root);\n\n      // Compute the new tree layout.\n      var nodes = treeData.descendants(),\n          links = treeData.descendants().slice(1);\n\n      // Normalize for fixed-depth.\n      nodes.forEach(function(d,i){\n          console.log(i + \", d.depth \" + d.depth);\n          d.y = 0;\n          switch(d.depth) {\n              case 6 : d.y += 90;\n              case 5 : d.y += 90;\n              case 4 : d.y += 90;\n              case 3 : d.y += 90;\n              case 2 : d.y += 50;\n              case 1 : d.y += 50;\n              case 0 : d.y += -70; break;\n              default: d.y = d.depth * 90;\n          }\n      });\n\n      // ****************** Nodes section ***************************\n\n      // Update the nodes...\n      var node = svg.selectAll('g.node')\n          .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n      // Enter any new modes at the parent's previous position.\n      var nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"id\", function(d) { return 'g-' + d.id; })\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on('click', click);\n\n      // Add Circle for the nodes\n      nodeEnter.append('circle')\n          .attr('class', 'node')\n          .attr('r', 1e-6)\n          .style(\"fill\", function(d) {\n              //return d._children ? \"lightsteelblue\" : \"#fff\";\n              return d.children || d._children ? \"#fff\" : \"#82b1c6\";\n          });\n\n      // Add labels for the nodes\n      nodeEnter.append('text')\n          .attr(\"dy\", \".35em\")\n          .attr(\"x\", function(d) {\n              //return d.children || d._children ? -13 : 13;\n              return -13;\n          })\n          .attr(\"text-anchor\", function(d) {\n              //return d.children || d._children ? \"end\" : \"start\";\n              return \"end\";\n          })\n          .text(function(d) { return d.data.name; });\n\n      // UPDATE\n      var nodeUpdate = nodeEnter.merge(node);\n\n      // Transition to the proper position for the node\n      nodeUpdate.transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n          });\n\n      // Update the node attributes and style\n      nodeUpdate.select('circle.node')\n          .attr('r', 10)\n          .style(\"fill\", function(d) {\n              //return d._children ? \"lightsteelblue\" : \"#fff\";\n\n              return d.children || d._children ? \"#fff\" : \"#82b1c6\";\n          })\n          .attr('cursor', 'pointer');\n\n\n      // Remove any exiting nodes\n      var nodeExit = node.exit().transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n      // On exit reduce the node circles size to 0\n      nodeExit.select('circle')\n          .attr('r', 1e-6);\n\n      // On exit reduce the opacity of text labels\n      nodeExit.select('text')\n          .style('fill-opacity', 1e-6);\n\n      // ****************** links section ***************************\n\n      // Update the links...\n      var link = svg.selectAll('path.link')\n          .data(links, function(d) { return d.id; });\n\n      // Enter any new links at the parent's previous position.\n      var linkEnter = link.enter().insert('path', \"g\")\n          .attr(\"class\", \"link\")\n          .attr('d', function(d){\n              var o = {x: source.x0, y: source.y0}\n              return diagonal(o, o)\n          });\n\n      // UPDATE\n      var linkUpdate = linkEnter.merge(link);\n\n      // Transition back to the parent element position\n      linkUpdate.transition()\n          .duration(duration)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n      // Remove any exiting links\n      var linkExit = link.exit().transition()\n          .duration(duration)\n          .attr('d', function(d) {\n              var o = {x: source.x, y: source.y}\n              return diagonal(o, o)\n          })\n          .remove();\n\n      // Store the old positions for transition.\n      nodes.forEach(function(d){\n          d.x0 = d.x;\n          d.y0 = d.y;\n      });\n\n      // Creates a curved (diagonal) path from parent to the child nodes\n      function diagonal(s, d) {\n\n          var path = `M ${s.y} ${s.x}\n            C ${(s.y + d.y) / 2} ${s.x},\n              ${(s.y + d.y) / 2} ${d.x},\n              ${d.y} ${d.x}`\n\n          return path\n      }\n\n      // Toggle children on click.\n      function click(d) {\n          if (d.children) {\n              d._children = d.children;\n              d.children = null;\n          } else {\n              d.children = d._children;\n              d._children = null;\n          }\n          update(d);\n\n          let index = -1;\n\n          d3.selectAll(\"g.node\").attr('class', 'node');\n\n          if (d.data.index || d.data.index >= 0) {\n              index = d.data.index;\n\n              d3.select(\"#g-\" + d.id).attr('class', 'node select');\n              d3.select(\"#g-\" + d.id).select('circle.node')\n                  .style(\"fill\", \"#f398b0\");\n          }\n          _this.selectedSegmentationIndex = index;\n          _this.chartClick.emit(d);\n      }\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { ChartOptions } from 'chart.js';\nimport { state } from '@angular/animations';\n\n@Component({\n  selector: 'lib-variable-width-chart',\n  templateUrl: './variable-width-chart.component.html',\n  styleUrls: ['./variable-width-chart.component.scss']\n})\nexport class VariableWidthChartComponent implements OnInit,OnChanges {\n\n  public generatedChartData: Array<any> = [{\n    type: 'line',\n    label: '',\n    data: [{y:0, x:0}, {y:0, x:0}],\n  }];\n\n  public generatedChartColors: Array<any> = [{\n    fill: true,\n    backgroundColor: '#000000',\n    pointRadius: 0,\n  }];\n\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  @Input() variableWidthChartData: Array<VariableWidthChartData>;\n  @Input() limitLineData: LimitLineData;\n  @Input() variableWidthChartLegend: boolean = true;\n  @Input() variableWidthChartOptions: ChartOptions = {};\n\n  constructor() { \n  }\n  \n  ngOnInit() {\n    if (!this.variableWidthChartOptions || Object.keys(this.variableWidthChartOptions).length == 0) {\n      this.variableWidthChartOptions = new GlobalChartOptions().variableWidthChartOptions;      \n    }    \n    this.buildChartData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.variableWidthChartOptions || Object.keys(this.variableWidthChartOptions).length == 0) {\n      this.variableWidthChartOptions = new GlobalChartOptions().variableWidthChartOptions;      \n    }    \n    this.buildChartData();\n  }\n\n  private buildChartData() {\n\n    if (!this.variableWidthChartData) {\n      return;\n    }\n\n    this.generatedChartData = [];\n    this.generatedChartColors = [];\n\n    let _this = this;    \n    let start = 0;\n    let index = 1;\n    let previousState = -1;\n    this.variableWidthChartData.map(function(d) {\n        let end = start + d.xValue;\n        _this.generatedChartData.push({\n            type: 'line',\n            label: d.label,\n            data: [{x: start, y: d.yValue}, {x: end, y: d.yValue}]\n        });\n\n        if (previousState == d.state) {\n            index++;\n        } else {\n            previousState = d.state; \n            index = 0;\n        }\n        _this.generatedChartColors.push(_this.getVolumeAllocationColor(d.state, index));\n\n        start = end;\n    });\n\n    if (this.limitLineData) {\n      this.generatedChartData.unshift({\n          type: 'line', \n          label: this.limitLineData.label, \n          data: [{x: this.limitLineData.xValue, y: 0}, {x: this.limitLineData.xValue, y: 1250}]\n      });\n\n      this.generatedChartColors.unshift(this.limitLineColor);\n    }\n\n    _this.chart.update();\n\n  }\n\n  public limitLineColor: any = { // red\n\n      fill:false,\n      borderColor: 'rgba(235, 84, 124, 1)',\n      borderWidth: 1.5,\n      borderDash: [5,5],\n      pointRadius: 0,\n      pointHitRadius: 10,\n\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235, 84, 124, 1)',\n\n      cubicInterpolationMode: 'monotone',\n  };\n\n  private volumeAllocaitonColors : Array<Array<string>> = [\n    ['#45a090', '#5fbaaa', '#82c9bd','#a6d8d0','#cae8e3'],\n    ['#2a90bb', '#35a3d2', '#5fb6db', '#7bc3e1', '#a4d6eb'],\n    ['#ec5f85'],\n    ['#a6a6a5', '#b7b7b6', '#c8c8c7', '#d9d9d8']\n  ]\n\n  private getVolumeAllocationColor(state: number, index: number) : any {\n\n      let bg = this.volumeAllocaitonColors[0][0];\n      let border = this.volumeAllocaitonColors[0][0];\n\n      // state : 0=win, 1=confirm, 2=current, 4=balance\n      let color = this.volumeAllocaitonColors[state];\n      bg = color[index%color.length];\n      border = bg;\n\n      return  {\n          fill: true,\n          backgroundColor: bg,\n          borderColor: border,\n          borderWidth: 1,\n          pointRadius: 0,\n\n          pointHitRadius: 10,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(235,84,124,1)',\n\n          cubicInterpolationMode:'monotone',\n      }\n  }\n}\n\nexport interface VariableWidthChartData {\n\n  label: string;\n  xValue: number;\n  yValue: number;\n  state: number;\n}\n\nexport interface LimitLineData {\n  label: string;\n  xValue: number;\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport * as d3 from 'd3';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { max } from 'moment';\n\n\n@Component({\n  selector: 'lib-waterfall-chart',\n  templateUrl: './waterfall-chart.component.html',\n  styleUrls: ['./waterfall-chart.component.scss']\n})\nexport class WaterfallChartComponent implements OnInit, OnChanges {\n\n  @Input() waterfallChartData: WaterfallChartData[];\n  @Input() waterfallExtendedChartData: WaterfallChartData[];\n  @Input() waterfallChartOptions: any = {};\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n\n  waterfallData: any[] = [];\n\n  waterfallChartConfig: any = {\n    displayModeBar: false,\n    displaylogo: false,\n    modeBarButtonsToRemove: ['pan2d', 'lasso2d']\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.waterfallData = [];\n    this.dataProcessing();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['waterfallChartData']) {\n      this.waterfallData = [];\n      this.dataProcessing();\n    }\n  }\n\n  dataProcessing() {\n    if (!this.waterfallChartOptions || Object.keys(this.waterfallChartOptions).length == 0) {\n      this.waterfallChartOptions = new GlobalChartOptions().waterfallChartOptions;\n    }\n    let datasetIndex: number = 0;\n    let comparedIndex: number = 0;\n    let _this = this;\n    this.waterfallChartData.forEach(chartData => {\n\n      let measures: string[] = [];\n      let xLabels: string[] = [];\n      let dataLabels: string[] = [];\n      let yValues: number[] = [];\n      let hoverinfos: string[] = [];\n      let index: number = 0;\n\n      chartData.waterfallItemData.forEach(itemData => {\n\n        if (!itemData.hidden) {\n          measures.push(itemData.measure);\n          dataLabels.push(itemData.dataLabel);\n          yValues.push(itemData.value);\n          hoverinfos.push('all');\n        } else {\n          measures.push('absolute');\n          dataLabels.push('');\n          yValues.push(0);\n          hoverinfos.push('none');\n        }\n        if (itemData.compared) {\n          comparedIndex = index;\n        }\n\n        xLabels.push(itemData.itemlabel);\n        index++;\n      });\n\n      if (_this.waterfallExtendedChartData && _this.waterfallExtendedChartData[datasetIndex]) {\n\n        measures.push('absolute');\n        dataLabels.push('');\n        yValues.push(0);\n        hoverinfos.push('none');\n        xLabels.push('');\n\n        _this.waterfallExtendedChartData[datasetIndex].waterfallItemData.forEach(extendedData => {\n          if (!extendedData.hidden) {\n            measures.push(extendedData.measure);\n            dataLabels.push(extendedData.dataLabel);\n            yValues.push(extendedData.value);\n            hoverinfos.push('all');\n          } else {\n            measures.push('absolute');\n            dataLabels.push('');\n            yValues.push(0);\n            hoverinfos.push('none');\n          }\n          xLabels.push(extendedData.itemlabel);\n        });\n      }\n\n      if (!chartData.connectorColor) {\n        chartData.connectorColor = 'rgba(36,123,160,0.5)';\n      }\n      if (!chartData.connectorWidth) {\n        chartData.connectorWidth = 1;\n      }\n      let data = {\n        name: chartData.name,\n        type: 'waterfall',\n        orientation: 'v',\n        measure: measures,\n        x: xLabels,\n        textposition: 'outside',\n        text: dataLabels,\n        y: yValues,\n        connector: {\n          line: {\n            color: chartData.connectorColor,\n            width: chartData.connectorWidth,\n          }\n        },\n        hoverinfo: hoverinfos,\n        decreasing: { marker: { color: chartData.decreasingColor } },\n        increasing: { marker: { color: chartData.increasingColor } },\n        totals: { marker: { color: chartData.totalsColor } }\n\n      }\n\n      this.waterfallData.push(data);\n      datasetIndex++;\n\n    });\n\n    if (this.waterfallExtendedChartData) {\n      let min: number = 0;\n      let max: number = 0;\n      let comparedValue: number = 0;\n\n      this.waterfallData.forEach(data => {\n        let total: number = 0;\n        let i: number = 0;\n        data.measure.forEach(measure => {\n          if (measure == 'absolute') {\n            total = data.y[i];\n          } else if (measure == 'relative') {\n            total += data.y[i];\n          }\n          if (total > max) {\n            max = total;\n          }\n          if (total < min) {\n            min = total;\n          }\n          if (i == comparedIndex) {\n            comparedValue = total;\n          }\n          i++;\n        });\n      });\n\n      this.waterfallChartOptions.shapes = [{\n        x0: this.waterfallChartData[0].waterfallItemData.length,\n        x1: this.waterfallChartData[0].waterfallItemData.length,\n        y0: min,\n        y1: max,\n        line: {\n          dash: 'solid',\n          color: '#444444',\n          width: 3\n        },\n        type: 'line',\n        xref: 'x',\n        yref: 'y',\n        opacity: 0.3,\n        fillcolor: '#7f7f7f'\n      }, {\n        x0: comparedIndex,\n        x1: this.waterfallChartData[0].waterfallItemData.length + 1,\n        y0: comparedValue,\n        y1: comparedValue,\n        line: {\n          dash: 'dash',\n          color: '#444444',\n          width: 3\n        },\n        type: 'line',\n        xref: 'x',\n        yref: 'y',\n        opacity: 0.3,\n        fillcolor: '#7f7f7f'\n      }];\n\n      this.waterfallChartOptions.annotations = [{\n        x: Math.ceil(this.waterfallChartData[0].waterfallItemData.length / 2),\n        y: max * 1.1,\n        text: '<b>' + this.waterfallChartData[0].name + '</b>',\n        font: { color: 'rgb(60, 55, 201)' },\n        showarrow: false\n\n      }, {\n        x: this.waterfallChartData[0].waterfallItemData.length\n          + Math.ceil(this.waterfallExtendedChartData[0].waterfallItemData.length / 2),\n        y: max * 1.1,\n        text: '<b>' + this.waterfallExtendedChartData[0].name + '</b>',\n        font: { color: 'rgb(60, 55, 201)' },\n        showarrow: false\n      }];\n    }\n  }\n\n  public chartClicked(event: any) {\n\n    if (!(event instanceof MouseEvent)) {\n      this.chartClick.emit(event);\n    }\n  }\n\n  public chartHovered(event: any) {\n\n    this.chartHover.emit(event);\n  }\n\n  public chartAfterPlotted(event: any) {\n\n    let _this = this;\n    d3.selectAll('.xaxislayer-above').selectAll('text').on('click', function (d) {\n\n      _this.labelClick.emit(d.text);\n    });\n  }\n}\n\nexport class WaterfallChartData {\n\n  name: string;\n  connectorColor?: string;\n  connectorWidth?: number;\n  waterfallItemData: WaterfallItemData[];\n  decreasingColor?: string = GlobalChartColors.globalBackgroundColors[0];\n  increasingColor?: string = GlobalChartColors.globalBackgroundColors[1];;\n  totalsColor?: string = GlobalChartColors.globalBackgroundColors[2];;\n}\n\nexport class WaterfallItemData {\n\n  measure: string;\n  itemlabel: string;\n  value: number;\n  dataLabel: string;\n  hidden?: boolean = false;\n  compared?: boolean = false;\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport * as waterfallPlugin from 'chartjs-plugin-waterfall';\n\n@Component({\n  selector: 'lib-waterfall-plugin-chart',\n  templateUrl: './waterfall-plugin-chart.component.html',\n  styleUrls: ['./waterfall-plugin-chart.component.scss']\n})\nexport class WaterfallPluginChartComponent implements OnInit, OnChanges {\n\n  @Input() waterfallPluginChartData: WaterfallPluginChartData[];\n\n  chartData: Chart.ChartData;\n  plugins = [waterfallPlugin];\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  \n  constructor() {\n  }\n\n  ngOnInit() {\n    this.adaptDataForPlugin();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  private adaptDataForPlugin() {\n    if (!this.waterfallPluginChartData) {\n      return;\n    }\n\n    const adaptedData = [];\n    let currentTotal = 0;\n\n    this.waterfallPluginChartData.forEach((v, idx) => {\n\n      if (!!v.total) {\n        currentTotal = v.data;\n      } else {\n        if (v.data < 0) {\n          currentTotal += v.data;\n        }\n\n        adaptedData.push({\n          data: [currentTotal],\n          waterfall: {\n            dummyStack: true\n          },\n          stack: `${idx}`\n        });\n\n        if (v.data > 0) {\n          currentTotal += v.data;\n        }\n      }\n\n      if (v.backgroundColor) {\n        adaptedData.push({\n          label: v.label,\n          data: [Math.abs(v.data)],\n          backgroundColor: v.backgroundColor,\n          stack: `${idx}`\n        });\n      } else {\n        let backgroundColor: string[] = [];\n        if (v.total) {\n          backgroundColor = ['rgba(255, 99, 132, 0.5)'];\n        } else {\n          if (v.data > 0) {\n            backgroundColor = ['rgba(54, 162, 235, 0.5)'];\n          } else {\n            backgroundColor = ['rgba(255, 206, 86, 0.5)'];\n          }\n        }\n        adaptedData.push({\n          label: v.label,\n          data: [Math.abs(v.data)],\n          backgroundColor: backgroundColor,\n          stack: `${idx}`\n        });\n      }\n    });\n\n    this.chartData = {\n      labels: ['Waterfall Model'],\n      datasets: adaptedData\n    };\n  }\n\n  options = {    \n    plugins: {\n      datalabels: {\n        display: false,\n      },\n      waterFallPlugin: {\n        stepLines: {\n          enabled: false,          \n        },\n      },\n    },    \n  }\n\n  public chartClicked(event: any) {\n \n    this.chartClick.emit(event);\n  }\n\n  public chartHovered(event: any) {\n  \n    this.chartHover.emit(event);\n  }\n}\n\nexport interface WaterfallPluginChartData {\n  label: string;\n  data: number;\n  backgroundColor?: string;\n  // marks data as total\n  total?: boolean;\n}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PlotlyViaCDNModule } from 'angular-plotly.js';\nimport { ChartsModule } from 'ng2-charts';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { BaseChartComponent } from './base-chart/base-chart.component';\nimport { BoxPlotChartComponent } from './box-plot-chart/box-plot-chart.component';\nimport { ChartLibComponent } from './chart-lib.component';\nimport { CombinedCategoryChartComponent } from './combined-chart/combined-category-chart.component';\nimport { CombinedMeasureChartComponent } from './combined-chart/combined-measure-chart.component';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { PieChartComponent } from './pie-chart/pie-chart.component';\nimport { ScatterChartComponent } from './scatter-chart/scatter-chart.component';\nimport { TreeLayoutChartComponent } from './tree-layout-chart/tree-layout-chart.component';\nimport { VariableWidthChartComponent } from './variable-width-chart/variable-width-chart.component';\nimport { WaterfallChartComponent } from './waterfall-chart/waterfall-chart.component';\nimport { WaterfallPluginChartComponent } from './waterfall-plugin-chart/waterfall-plugin-chart.component';\n\n// PlotlyModule.plotlyjs = PlotlyJS;\n\nPlotlyViaCDNModule.plotlyVersion = \"1.50.0\"; // can be `latest` or any version number (i.e.: '1.40.0')\nPlotlyViaCDNModule.plotlyBundleNames = ['cartesian', 'finance']; // optional: can be null (for full) or 'basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox' or 'finance'\n\n@NgModule({\n  declarations: [\n    ChartLibComponent,\n    BarChartComponent,\n    BoxPlotChartComponent,\n    CombinedCategoryChartComponent,\n    CombinedMeasureChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    ScatterChartComponent,\n    TreeLayoutChartComponent,\n    VariableWidthChartComponent,\n    WaterfallChartComponent,\n    WaterfallPluginChartComponent,\n    BaseChartComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartsModule,\n    PlotlyViaCDNModule\n  ],\n  exports: [\n    ChartLibComponent,\n    BarChartComponent,\n    BoxPlotChartComponent,\n    CombinedCategoryChartComponent,\n    CombinedMeasureChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    ScatterChartComponent,\n    TreeLayoutChartComponent,\n    VariableWidthChartComponent,\n    WaterfallChartComponent,\n    WaterfallPluginChartComponent,\n    BaseChartComponent,\n    ChartsModule\n  ]\n})\nexport class ChartLibModule { }\n"]}