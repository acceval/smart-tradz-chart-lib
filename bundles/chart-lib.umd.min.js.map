{"version":3,"sources":["ng://chart-lib/lib/chart-lib.service.ts","ng://chart-lib/lib/chart-lib.component.ts","ng://chart-lib/lib/simple-chart-config.ts","ng://chart-lib/lib/global-chart-colors.ts","ng://chart-lib/lib/global-chart-options.ts","ng://chart-lib/lib/bar-chart/bar-chart.component.ts","ng://chart-lib/lib/box-plot-chart/box-plot-chart.component.ts","ng://chart-lib/lib/combined-chart/combined-category-chart.component.ts","ng://chart-lib/lib/combined-chart/combined-measure-chart.component.ts","ng://chart-lib/lib/line-chart/line-chart.component.ts","ng://chart-lib/lib/pie-chart/pie-chart.component.ts","ng://chart-lib/lib/scatter-chart/scatter-chart.component.ts","ng://chart-lib/lib/tree-layout-chart/tree-layout-chart.component.ts","ng://chart-lib/lib/variable-width-chart/variable-width-chart.component.ts","ng://chart-lib/lib/waterfall-chart/waterfall-chart.component.ts","ng://chart-lib/lib/waterfall-plugin-chart/waterfall-plugin-chart.component.ts","ng://chart-lib/lib/base-chart/base-chart.component.ts","ng://chart-lib/lib/chart-lib.module.ts"],"names":["ChartLibService","Injectable","args","providedIn","ChartLibComponent","prototype","ngOnInit","Component","selector","template","SimpleChartConfig","this","isDisplayDataLabel","dataLabelAnchor","dataLabelAlign","yAxisLeftLabel","yAxisRightLabel","xAxisLabel","isDisplayLegend","legendPosition","isLegendPointStyle","isStacked","isDisplayYaxisLeftGrid","isDisplayYaxisRightGrid","isDisplayXaxisGrid","fontFamily","fontSize","fontColor","gridColor","isHorizontalBar","populateChartConfig","chartOptions","chartConfig","dataLabels","display","anchor","align","plugins","length","scales","yAxes","scaleLabel","labelString","gridLines","color","ticks","push","position","xAxes","positionType","legend","labels","usePointStyle","stacked","GlobalChartColors","globalColors","backgroundColor","borderColor","borderWidth","pointRadius","pointHitRadius","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","cubicInterpolationMode","FONT_COLOR","GRID_COLOR","globalBackgroundColors","GlobalChartOptions","barChartOptions","responsive","FONT_FAMILY","FONT_SIZE","datalabels","scatterChartOptions","pieChartOptions","formatter","value","ctx","chart","data","dataIndex","waterfallChartOptions","xaxis","type","automargin","yaxis","margin","t","font","family","size","autosize","showlegend","paper_bgcolor","plot_bgcolor","boxPlotChartOptions","showgrid","gridcolor","gridwidth","lineChartOptions","id","annotation","combinedChartOptions","variableWidthChartOptions","peityPieOptions","width","height","delimiter","fill","radius","peityDonutOptions","innerRadius","peityLineOptions","max","min","stroke","strokeWidth","peityBarOptions","padding","BarChartComponent","barChartLabels","barChartLegend","barChartData","barChartPlugins","barChartColors","simpleChartConfig","chartClick","EventEmitter","chartHover","labelClick","chartType","Object","keys","pluginDataLabels","beforeInit","options","afterFit","chartClicked","_a","event","active","emit","$","getContext","barChart","base","chartArea","bottom","offset","top","window","scrollTop","pageY","count","paddingLeft","xwidth","paddingRight","barIndex","offsetX","Math","floor","dataLabel","chartHovered","Input","Output","ViewChild","BaseChartDirective","BoxPlotChartComponent","boxPlotData","boxPlotChartConfig","displayModeBar","displaylogo","modeBarButtonsToRemove","_this_1","boxPlotChartData","forEach","chartData","y","yValues","name","boxpoints","marker","markerColor","MouseEvent","chartAfterPlotted","_this","d3.selectAll","selectAll","on","d","text","BoxPlotChartData","CombinedCategoryChartComponent","combinedChartLabels","combinedChartLegend","combinedChartData","combinedChartPlugins","combinedChartColors","combinedChart","CombinedMeasureChartComponent","pluginAnnotations","ngOnChanges","changes","update","LineChartComponent","lineChartLegend","lineChartColors","lineChartPlugins","lineChartData","lineChart","lineChartLabels","PieChartComponent","pieChartLabels","pieChartData","pieChartLegend","pieChartPlugins","pieChartColors","ScatterChartComponent","scatterChartColors","TreeLayoutChartComponent","selectedSegmentationIndex","root","svg","d3","select","append","attr","i","duration","treemap","tree","hierarchy","treeData","children","x0","y0","source","nodes","descendants","links","slice","console","log","depth","node","nodeEnter","enter","click","style","_children","nodeUpdate","merge","transition","x","nodeExit","exit","remove","link","linkEnter","insert","o","diagonal","linkUpdate","parent","s","path","index","VariableWidthChartComponent","generatedChartData","label","generatedChartColors","variableWidthChartLegend","limitLineColor","borderDash","volumeAllocaitonColors","buildChartData","variableWidthChartData","start","previousState","map","end","xValue","yValue","state","getVolumeAllocationColor","limitLineData","unshift","border","WaterfallChartComponent","waterfallData","waterfallChartConfig","dataProcessing","datasetIndex","comparedIndex","waterfallChartData","measures","xLabels","hoverinfos","waterfallItemData","itemData","hidden","measure","compared","itemlabel","waterfallExtendedChartData","extendedData","connectorColor","connectorWidth","orientation","textposition","connector","line","hoverinfo","decreasing","decreasingColor","increasing","increasingColor","totals","totalsColor","min_1","max_1","comparedValue_1","total","shapes","x1","y1","dash","xref","yref","opacity","fillcolor","annotations","ceil","showarrow","WaterfallChartData","WaterfallItemData","WaterfallPluginChartComponent","waterfallPlugin","waterFallPlugin","stepLines","enabled","adaptDataForPlugin","waterfallPluginChartData","adaptedData","currentTotal","v","idx","waterfall","dummyStack","stack","abs","datasets","BaseChartComponent","opt","assign","create","getPrototypeOf","onClick","hover","onHover","_options","_chart","Chart","canvasRef","nativeElement","chartObj","ngOnDestroy","destroy","angularPlotly_js","PlotlyModule","plotlyjs","PlotlyJS","ChartLibModule","NgModule","declarations","imports","CommonModule","ChartsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chart-lib',\n  template: `\n    <p>\n      chart-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class ChartLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ChartOptions, PositionType } from 'chart.js';\n\n\nexport class SimpleChartConfig {\n  \n  isDisplayDataLabel?: boolean = false;\n  dataLabelAnchor?: string = 'center';\n  dataLabelAlign?: string = 'center';\n  yAxisLeftLabel?: string = '';\n  yAxisRightLabel?: string = '';\n  xAxisLabel?: string = '';\n  isDisplayLegend?: boolean = true;\n  legendPosition?: string = 'top';\n  isLegendPointStyle?: boolean = false;\n  isStacked?: boolean = false;\n  isDisplayYaxisLeftGrid?: boolean = true;\n  isDisplayYaxisRightGrid?: boolean = false;\n  isDisplayXaxisGrid?: boolean = true;\n  fontFamily?: string = 'Helvetica Neue';\n  fontSize?: number = 12;\n  fontColor?: string = 'rgba(0,0,0,0.5)';\n  gridColor?: string = 'rgba(0,0,0,0.1)';\n  isHorizontalBar?: boolean = false;\n  \n  public static populateChartConfig(chartOptions: ChartOptions, chartConfig: SimpleChartConfig): ChartOptions {\n\n    if (chartConfig.isDisplayDataLabel) {\n      let dataLabels = {        \n        display: true,\n        anchor: chartConfig.dataLabelAnchor,\n        align: chartConfig.dataLabelAlign,        \n      }\n      chartOptions.plugins = {dataLabels};\n    }\n\n    if (chartConfig.yAxisLeftLabel.length > 0) {      \n      chartOptions.scales.yAxes[0].scaleLabel = {\n        display: true,\n        labelString: chartConfig.yAxisLeftLabel\n      };\n      \n      chartOptions.scales.yAxes[0].gridLines = {\n        display: chartConfig.isDisplayYaxisLeftGrid,\n        color: chartConfig.gridColor\n      }\n      \n      chartOptions.scales.yAxes[0].ticks = {\n        fontFamily: chartConfig.fontFamily,\n        fontSize: chartConfig.fontSize,\n        fontColor: chartConfig.fontColor\n      }\n      \n    }\n\n    if (chartConfig.yAxisRightLabel.length > 0) {\n      if (chartOptions.scales.yAxes.length == 1) {\n        chartOptions.scales.yAxes.push({\n          position: 'right',\n          gridLines: { display: chartConfig.isDisplayYaxisRightGrid },\n          scaleLabel: {\n            display: true,\n            labelString: chartConfig.yAxisRightLabel\n          }, \n          ticks: {\n            fontFamily: chartConfig.fontFamily,\n            fontSize: chartConfig.fontSize,\n            fontColor: chartConfig.fontColor\n          }\n        });\n      }          \n    }\n\n    if (chartConfig.xAxisLabel.length > 0) {      \n      chartOptions.scales.xAxes[0].scaleLabel = {\n        display: true,\n        labelString: chartConfig.xAxisLabel\n      };\n\n      chartOptions.scales.xAxes[0].ticks = {\n        fontFamily: chartConfig.fontFamily,\n        fontSize: chartConfig.fontSize,\n        fontColor: chartConfig.fontColor\n      }\n      \n    }\n\n    if (chartConfig.isDisplayLegend) {\n      \n      let positionType: PositionType = 'top';\n      if (chartConfig.legendPosition == 'top') {\n        positionType = 'top';\n      } else if (chartConfig.legendPosition == 'bottom') {\n        positionType = 'bottom';\n      } else if (chartConfig.legendPosition == 'left') {\n        positionType = 'left';\n      } else if (chartConfig.legendPosition == 'right') {\n        positionType = 'right';\n      }\n      chartOptions.legend = {\n        display: true,\n        position: positionType\n      };\n    } else {\n      chartOptions.legend = {\n        display: false\n      };\n    }\n\n    if (chartConfig.isLegendPointStyle) {\n      if (!chartOptions.legend.labels) {\n        chartOptions.legend.labels = {};\n      }\n      chartOptions.legend.labels.usePointStyle = true;\n    } \n\n    if (chartConfig.isStacked) {\n      chartOptions.scales.yAxes[0].stacked = true;\n      chartOptions.scales.xAxes[0].stacked = true;\n    }\n\n \n    return chartOptions;\n  }\n} ","\nexport class GlobalChartColors {\n\n  public static FONT_COLOR = 'rgba(0,0,0,0.5)';\n  public static GRID_COLOR = 'rgba(0,0,0,0.1)';\n  \n  public static globalBackgroundColors: Array<string> = [\n    'rgba(36,123,160,0.6)',\n    'rgba(112,193,179,0.6)',\n    'rgba(235,84,124,0.6)',\n    'rgba(229,227,24,0.6)',\n    'rgba(204,194,16,0.6)',\n    'rgba(107,76,154,0.6)',\n  ];\n\n  public globalColors: Array<any> = [\n    { // blue        \n        backgroundColor: 'rgba(36,123,160,0.6)',\n        borderColor: 'rgba(36,123,160,1.0)',\n        borderWidth: 1,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth:5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n        cubicInterpolationMode:'monotone',\n    },\n    { // green\n        backgroundColor: 'rgba(112,193,179,0.6)',\n        borderColor: 'rgba(112,193,179,1.0)',\n        borderWidth: 1,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n\n    },\n    { // red\n        backgroundColor: 'rgba(235,84,124,0.6)',\n        borderColor: 'rgba(235,84,124,1.0)',\n        borderWidth: 1,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n    },    \n    { // yellow\n        \n        backgroundColor: 'rgba(229,227,24,0.6)',\n        borderColor: 'rgba(229,227,24,1.0)',\n        borderWidth: 1,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n\n    },\n    { // earth        \n        backgroundColor: 'rgba(204,194,16,0.6)',\n        borderColor: 'rgba(121,115,9,1.0)',\n        borderWidth: 1,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',        \n    },\n    { // purple    \n        backgroundColor: 'rgba(107,76,154,0.6)',\n        borderColor: 'rgba(69,49,99,1.0)',\n        borderWidth: 1,\n        pointRadius:1,\n        pointHitRadius: 10,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 5,\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(235,84,124,1.0)',\n    }\n  ];\n\n}","import { ChartOptions } from 'chart.js';\nimport { GlobalChartColors } from './global-chart-colors';\n\nexport class GlobalChartOptions {\n\n  public static FONT_FAMILY = 'Helvetica Neue';\n  public static FONT_SIZE = 12;  \n\n  public peityPieOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: null,\n      fill: GlobalChartColors.globalBackgroundColors,\n      height: height,\n      radius: 8,\n      width: width\n    }\n    return options;\n  }\n\n  public peityDonutOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: null,\n      fill: GlobalChartColors.globalBackgroundColors,\n      height: height,\n      innerRadius: null,\n      radius: 8,\n      width: width\n    }\n    return options;\n  }\n\n  public peityLineOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: \",\",\n      fill: GlobalChartColors.globalBackgroundColors[0],    \n      max: null,\n      min: 0,\n      stroke: GlobalChartColors.globalBackgroundColors[1],\n      strokeWidth: 1,\n      height: height,\n      width: width\n    }\n    return options;\n  }\n\n  public peityBarOptions(width: number, height: number): any {\n    let options: any = {\n      delimiter: \",\",\n      fill: [GlobalChartColors.globalBackgroundColors[0]],    \n      max: null,\n      min: 0,\n      padding: 0.1,\n      height: height,\n      width: width\n    }\n    return options;\n  }\n  \n  public barChartOptions: ChartOptions = {\n    responsive: true,    \n    scales: { \n      xAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }], \n      yAxes: [{\n\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }] \n    },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n\n  public scatterChartOptions: ChartOptions = {\n    responsive: true,\n    scales: { \n      xAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }], \n      yAxes: [{\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }] \n    },\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },      \n  };\n\n  public pieChartOptions: ChartOptions = {\n    responsive: true,    \n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = ctx.chart.data.labels[ctx.dataIndex];\n          return label;\n        },\n      },\n    }\n  };\n\n  public waterfallChartOptions: any = {\n\n    xaxis: {\n      type: 'category',\n      automargin: true\n    },\n    yaxis: {\n      type: 'linear',\n      automargin: true\n    },\n    margin: {      \n      t: 60,        \n    },\n    font: {\n      family: GlobalChartOptions.FONT_FAMILY,\n      size: GlobalChartOptions.FONT_SIZE,\n      color: GlobalChartColors.FONT_COLOR\n    },\n    autosize: true,\n    showlegend: false,\n    paper_bgcolor: 'rgba(0,0,0,0)',\n    plot_bgcolor: 'rgba(0,0,0,0)'\n  };\n\n  public boxPlotChartOptions: any = {\n\n    xaxis: {\n      type: 'category',\n      showgrid: false,\n      automargin: true\n    },\n    yaxis: {\n      type: 'linear',\n      showgrid: true,\n      automargin: true,      \n      gridcolor: GlobalChartColors.GRID_COLOR,      \n      gridwidth: 1\n    },    \n    font: {\n      family: GlobalChartOptions.FONT_FAMILY,\n      size: GlobalChartOptions.FONT_SIZE,\n      color: GlobalChartColors.FONT_COLOR\n    },\n    autosize: true,\n    showlegend: false,\n    paper_bgcolor: 'rgba(0,0,0,0)',\n    plot_bgcolor: 'rgba(0,0,0,0)'\n  };\n\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: true,\n        anchor: 'end',\n        align: 'end',\n      }\n    },  \n    scales: {      \n      xAxes: [{\n        \n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n         \n      }],\n      yAxes: [{\n          id: 'y-axis-0',\n          position: 'left',\n          gridLines: {\n            color: GlobalChartColors.GRID_COLOR\n          },\n          ticks: {\n            fontFamily: GlobalChartOptions.FONT_FAMILY,\n            fontSize: GlobalChartOptions.FONT_SIZE,\n            fontColor: GlobalChartColors.FONT_COLOR,\n          }\n        },\n        {\n          id: 'y-axis-1',\n          position: 'right',\n          gridLines: {\n            color: GlobalChartColors.GRID_COLOR\n          },\n          ticks: {\n            fontFamily: GlobalChartOptions.FONT_FAMILY,\n            fontSize: GlobalChartOptions.FONT_SIZE,\n            fontColor: GlobalChartColors.FONT_COLOR,\n          }\n        }\n      ]\n    },\n    annotation: {      \n    },\n  };  \n\n  public combinedChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },  \n    scales: {      \n      xAxes: [{\n\n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [\n        {\n          id: 'y-axis-0',\n          position: 'left',\n          gridLines: {\n            color: GlobalChartColors.GRID_COLOR\n          },\n          ticks: {\n            fontFamily: GlobalChartOptions.FONT_FAMILY,\n            fontSize: GlobalChartOptions.FONT_SIZE,\n            fontColor: GlobalChartColors.FONT_COLOR,\n          }\n        },\n        {\n          id: 'y-axis-1',\n          position: 'right',          \n          gridLines: {\n            color: GlobalChartColors.GRID_COLOR\n          },\n          ticks: {\n            fontFamily: GlobalChartOptions.FONT_FAMILY,\n            fontSize: GlobalChartOptions.FONT_SIZE,\n            fontColor: GlobalChartColors.FONT_COLOR,\n          }      \n        }\n      ]\n    },\n    annotation: {      \n    },\n  };  \n\n  public variableWidthChartOptions: ChartOptions = {\n\n    responsive: true,    \n    legend : { \n      display: false \n    },\n    plugins: {\n      datalabels: {\n        display: false,\n      }\n    },   \n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,          \n        },        \n        gridLines: {\n          color: GlobalChartColors.GRID_COLOR\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }],\n      yAxes: [{        \n        position: 'left',        \n        gridLines: {          \n          display: false\n        },\n        ticks: {\n          fontFamily: GlobalChartOptions.FONT_FAMILY,\n          fontSize: GlobalChartOptions.FONT_SIZE,\n          fontColor: GlobalChartColors.FONT_COLOR,\n        }\n      }, {        \n        position: 'right',\n        gridLines: { display: false },\n        scaleLabel: { display: false },        \n        ticks: { display: false }\n      }],\n      \n    }\n  };\n}","import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { ChartOptions, ChartDataSets } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport { SimpleChartConfig } from '../simple-chart-config';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss']\n})\nexport class BarChartComponent implements OnInit {\n\n  @Input() barChartOptions: ChartOptions = {};  \n  @Input() barChartLabels: Label[] = [];\n  @Input() barChartLegend = true;\n  @Input() barChartData: ChartDataSets[] = [];\n  @Input() barChartPlugins: any[] = [];\n  @Input() barChartColors: Array<any> = []\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  chartType: string = 'bar';\n  \n  constructor() { \n  }\n\n  ngOnInit() {\n\n    if (!this.barChartColors || Object.keys(this.barChartColors).length == 0) {\n      this.barChartColors = new GlobalChartColors().globalColors;\n    }\n\n    if (!this.barChartOptions || Object.keys(this.barChartOptions).length == 0) {\n      this.barChartOptions = new GlobalChartOptions().barChartOptions;\n      \n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {\n        if (!this.simpleChartConfig.isHorizontalBar) {\n          this.chartType = 'bar';\n        } else {\n          this.chartType = 'horizontalBar';\n        }\n        this.barChartOptions = SimpleChartConfig.populateChartConfig(this.barChartOptions, this.simpleChartConfig);\n      }\n    }    \n    \n    this.barChartPlugins.push(pluginDataLabels);\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.barChartPlugins.push(chartPlugin);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#barChart')[0].getContext(\"2d\");\n    var barChart: any = this.chart.chart;\n    var base = barChart.chartArea.bottom;    \n    var height = barChart.height;\n    var width = barChart.scales['x-axis-0'].width;\n    var offset = $('#barChart').offset().top - $(window).scrollTop();\n    \n\n    if (event.pageY > base + offset) {\n      var count = barChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = barChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = barChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - barChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.barChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }\n  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport * as d3 from 'd3';\nimport { GlobalChartColors } from '../global-chart-colors';\n\n@Component({\n  selector: 'lib-box-plot-chart',\n  templateUrl: './box-plot-chart.component.html',\n  styleUrls: ['./box-plot-chart.component.scss']\n})\nexport class BoxPlotChartComponent implements OnInit {\n  \n  @Input() boxPlotChartOptions: any = {};\n  @Input() boxPlotChartData: BoxPlotChartData[];\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();  \n  \n  boxPlotData: any[] = [];  \n  \n  boxPlotChartConfig: any = {\n    displayModeBar: false,\n    displaylogo: false,      \n    modeBarButtonsToRemove: ['pan2d', 'lasso2d']\n  };\n\n  constructor() {      \n  }\n\n  ngOnInit() {\n\n    if (!this.boxPlotChartOptions || Object.keys(this.boxPlotChartOptions).length == 0) {\n      this.boxPlotChartOptions = new GlobalChartOptions().boxPlotChartOptions;\n    }    \n\n    this.boxPlotChartData.forEach(chartData => {\n      let data = {\n        y: chartData.yValues,\n        name: chartData.name,\n        type: 'box',        \n        boxpoints: chartData.boxpoints,\n        marker: {color: chartData.markerColor}        \n      }\n\n      this.boxPlotData.push(data);\n    });                \n  }\n    \n  public chartClicked(event: any) {\n\n    if (!(event instanceof MouseEvent)) {\n      this.chartClick.emit(event);\n    }\n  }\n\n  public chartHovered(event: any) {\n  \n    this.chartHover.emit(event);\n  }\n    \n  public chartAfterPlotted(event: any) {\n      \n    let _this = this;  \n    d3.selectAll(\".xaxislayer-above\").selectAll('text').on(\"click\", function(d) {\n\n      _this.labelClick.emit(d.text);      \n    });\n  }\n\n}\n\nexport class BoxPlotChartData {\n\n  yValues: number[];\n  name: string;  \n  markerColor?: string = GlobalChartColors.globalBackgroundColors[0];  \n  boxpoints?: any = false;\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-combined-category-chart',\n  templateUrl: './combined-category-chart.component.html',\n  styleUrls: ['./combined-category-chart.component.scss']\n})\nexport class CombinedCategoryChartComponent implements OnInit {\n\n  @Input() combinedChartOptions: ChartOptions = {};\n  \n  @Input() combinedChartLabels: Label[] = [];\n  @Input() combinedChartLegend = true;\n  @Input() combinedChartData: ChartDataSets[] = [];\n  @Input() combinedChartPlugins: any[] = [];\n  @Input() combinedChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  \n  constructor() { \n\n  }\n\n  ngOnInit() {\n    \n    if (!this.combinedChartColors || Object.keys(this.combinedChartColors).length == 0) {\n      this.combinedChartColors = new GlobalChartColors().globalColors;\n    }\n    \n    if (!this.combinedChartOptions || Object.keys(this.combinedChartOptions).length == 0) {\n      this.combinedChartOptions = new GlobalChartOptions().barChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.combinedChartOptions = SimpleChartConfig.populateChartConfig(this.combinedChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n    this.combinedChartPlugins.push(pluginDataLabels);\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.combinedChartPlugins.push(chartPlugin);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#combinedChart')[0].getContext(\"2d\");\n    var combinedChart: any = this.chart.chart;\n    var base = combinedChart.chartArea.bottom;    \n    var height = combinedChart.height;\n    var width = combinedChart.scales['x-axis-0'].width;\n    var offset = $('#combinedChart').offset().top - $(window).scrollTop();\n    \n\n    if (event.pageY > base + offset) {\n      var count = combinedChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = combinedChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = combinedChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - combinedChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.combinedChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, BaseChartDirective } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport * as pluginAnnotations from 'chartjs-plugin-datalabels';\nimport { SimpleChartConfig } from '../simple-chart-config';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-combined-measure-chart',\n  templateUrl: './combined-measure-chart.component.html',\n  styleUrls: ['./combined-measure-chart.component.scss']\n})\nexport class CombinedMeasureChartComponent implements OnInit, OnChanges {\n\n  @Input() combinedChartOptions: ChartOptions = {};\n  \n  @Input() combinedChartLabels: Label[] = [];\n  @Input() combinedChartLegend = true;\n  @Input() combinedChartData: ChartDataSets[] = [];\n  @Input() combinedChartPlugins: any[] = [];\n  @Input() combinedChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n\n  constructor() { \n\n    if (!this.combinedChartColors || Object.keys(this.combinedChartColors).length == 0) {\n      this.combinedChartColors = new GlobalChartColors().globalColors;\n    }\n    if (!this.combinedChartOptions || Object.keys(this.combinedChartOptions).length == 0) {\n      this.combinedChartOptions = new GlobalChartOptions().combinedChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.combinedChartOptions = SimpleChartConfig.populateChartConfig(this.combinedChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n  }\n\n  ngOnInit() {\n\n    this.combinedChartPlugins.push(pluginAnnotations);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['combinedChartData']) {\n      if (this.combinedChartData == null) {\n        return;\n      }\n\n      this.chart.update();\n    }\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n    var ctx = $('#combinedChart')[0].getContext(\"2d\");\n    var combinedChart: any = this.chart.chart;\n    var base = combinedChart.chartArea.bottom;    \n    var height = combinedChart.height;\n    var width = combinedChart.scales['x-axis-0'].width;\n    var offset = $('#combinedChart').offset().top - $(window).scrollTop();\n    \n\n    if (event.pageY > base + offset) {\n      var count = combinedChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = combinedChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = combinedChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - combinedChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.combinedChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { BaseChartDirective, Label } from 'ng2-charts';\nimport { SimpleChartConfig } from '../simple-chart-config';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\ndeclare var $: any;\n\n@Component({\n  selector: 'lib-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit, OnChanges {\n\n  @Input() lineChartOptions: ChartOptions = {};\n  @Input() lineChartLabels: Label[];\n  @Input() lineChartLegend = true;\n  @Input() lineChartData: ChartDataSets[];  \n  @Input() lineChartColors: Array<any> = [];\n  @Input() lineChartPlugins: any[] = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n\n  constructor() {\n    \n    if (!this.lineChartColors || Object.keys(this.lineChartColors).length == 0) {\n      this.lineChartColors = new GlobalChartColors().globalColors;\n\n      this.lineChartColors.forEach(color => {\n        color['fill'] = false;\n        color['cubicInterpolationMode'] = 'monotone';\n        color['lineTension'] = 1;\n        color['pointRadius'] = 3;\n        color['pointHoverRadius'] = 3;\n      });  \n    }\n          \n    if (!this.lineChartOptions || Object.keys(this.lineChartOptions).length == 0) {\n      this.lineChartOptions = new GlobalChartOptions().lineChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.lineChartOptions = SimpleChartConfig.populateChartConfig(this.lineChartOptions, \n          this.simpleChartConfig);\n      }\n    }\n\n    \n  }\n\n  ngOnInit() {\n    this.lineChartPlugins.push(pluginDataLabels);\n\n    let chartPlugin = {      \n      beforeInit: function(chart, options) {\n        chart.legend.afterFit = function() {\n          this.height = this.height + 20;\n        };\n      }\n    }\n    this.lineChartPlugins.push(chartPlugin);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['lineChartData']) {\n      if (this.lineChartData == null) {\n        return;\n      }\n\n      this.chart.update();\n    }\n  }\n\n  public update() {\n    this.chart.update();\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n\n\n    var ctx = $('#lineChart')[0].getContext(\"2d\");\n    var lineChart: any = this.chart.chart;\n    var base = lineChart.chartArea.bottom;    \n    var height = lineChart.height;\n    var width = lineChart.scales['x-axis-0'].width;\n    var offset = $('#lineChart').offset().top - $(window).scrollTop();\n    \n    if (event.pageY > base + offset) {\n      var count = lineChart.scales['x-axis-0'].ticks.length;\n      var paddingLeft = lineChart.scales['x-axis-0'].paddingLeft;\n      var paddingRight = lineChart.scales['x-axis-0'].paddingRight;\n      var xwidth = (width - paddingLeft - paddingRight) / count;\n      \n      var barIndex = (event.offsetX - paddingLeft - lineChart.scales['y-axis-0'].width) / xwidth;\n\n      if (barIndex > 0 && barIndex < count) {\n        barIndex = Math.floor(barIndex);\n        var dataLabel = this.lineChartLabels[barIndex];\n        this.labelClick.emit(dataLabel);\n      }\n    }\n  \n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label, Color } from 'ng2-charts';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\n\n@Component({\n  selector: 'lib-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n\n  @Input() pieChartOptions: ChartOptions = {};\n  @Input() pieChartLabels: Label[] = [];\n  @Input() pieChartData: number[] = [];\n  @Input() pieChartLegend = true;\n  @Input() pieChartPlugins: any[] = [];\n  @Input() pieChartColors: Array<any> = [];  \n  @Input() simpleChartConfig: SimpleChartConfig = {};\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    if (!this.pieChartColors || Object.keys(this.pieChartColors).length == 0) {\n      this.pieChartColors = [{   \n          backgroundColor: [],\n        }];  \n      let globalColors = new GlobalChartColors().globalColors;\n      globalColors.forEach(color => {\n        this.pieChartColors[0].backgroundColor.push(color.backgroundColor);\n      });\n    }\n\n    if (!this.pieChartOptions || Object.keys(this.pieChartOptions).length == 0) {\n      this.pieChartOptions = new GlobalChartOptions().pieChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.pieChartOptions = SimpleChartConfig.populateChartConfig(this.pieChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n  }\n\n  ngOnInit() {\n    if (!this.pieChartPlugins) {\n      this.pieChartPlugins = [];\n    }\n    this.pieChartPlugins.push(pluginDataLabels);\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { ChartOptions, ChartDataSets, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { SimpleChartConfig } from '../simple-chart-config';\n\n@Component({\n  selector: 'lib-scatter-chart',\n  templateUrl: './scatter-chart.component.html',\n  styleUrls: ['./scatter-chart.component.scss']\n})\nexport class ScatterChartComponent implements OnInit {\n\n  @Input() scatterChartOptions: ChartOptions = {};\n  @Input() scatterChartLabels: Label[];\n  @Input() scatterChartData: ChartDataSets[];\n  @Input() scatterChartColors: Array<any> = [];\n  @Input() simpleChartConfig: SimpleChartConfig = {};\n  \n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  \n  constructor() { \n\n    if (!this.scatterChartColors || Object.keys(this.scatterChartColors).length == 0) {\n      this.scatterChartColors = new GlobalChartColors().globalColors;\n      this.scatterChartColors.forEach(color => {\n        color['pointRadius'] = 6;\n        color['pointHoverRadius'] = 6;\n      });\n    }\n\n    if (!this.scatterChartOptions || Object.keys(this.scatterChartOptions).length == 0) {\n      this.scatterChartOptions = new GlobalChartOptions().scatterChartOptions;\n\n      if (this.simpleChartConfig && Object.keys(this.simpleChartConfig).length > 0) {       \n        this.scatterChartOptions = SimpleChartConfig.populateChartConfig(this.scatterChartOptions, \n          this.simpleChartConfig);\n      }\n    }    \n  }\n\n  ngOnInit() {\n  }\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartClick.emit(active[0]);\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {    \n    if (active.length > 0) {\n      this.chartHover.emit(active[0]);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\ndeclare var d3: any;\ndeclare var window: any;\n\n@Component({\n  selector: 'lib-tree-layout-chart',\n  templateUrl: './tree-layout-chart.component.html',\n  styleUrls: ['./tree-layout-chart.component.scss']\n})\nexport class TreeLayoutChartComponent implements OnInit {\n\n  @Input() public selectedSegmentationIndex: number = -1;  \n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Input() treeData: any;\n        \n  constructor() { }\n\n  ngOnInit() {\n\n    let _this = this;\n\n    // Set the dimensions and margins of the diagram\n    var margin = {top: 20, right: 90, bottom: 30, left: 90},\n    width = 960 - margin.left - margin.right,\n    height = 700 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    // appends a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    var svg = d3.select(\"svg\")\n    //.attr(\"width\", width + margin.right + margin.left)\n    //.attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\"\n        + margin.left + \",\" + margin.top + \")\");\n\n    /*var aspect = width / height;\n    d3.select(window)\n    .on(\"resize\", function() {\n\n        var targetWidth = svg.node().getBoundingClientRect().width;\n        console.log(\"targetWidth : \" + targetWidth);\n        svg.attr(\"width\", targetWidth);\n        svg.attr(\"height\", targetWidth / aspect);\n    });*/\n\n    var i = 0,\n    duration = 750,\n    root;\n\n    // declares a tree layout and assigns the size\n    var treemap = d3.tree().size([height, width]);\n\n    // Assigns parent, children, height, depth\n    root = d3.hierarchy(this.treeData, function(d) { return d.children; });\n    root.x0 = height / 2;\n    root.y0 = 0;\n\n    // Collapse after the second level\n    //root.children.forEach(collapse);\n\n    update(root);\n\n    // Collapse the node and all it's children\n    function collapse(d) {\n      if(d.children) {\n          d._children = d.children\n          d._children.forEach(collapse)\n          d.children = null\n      }\n    }\n\n    function update(source) {\n\n      // Assigns the x and y position for the nodes\n      var treeData = treemap(root);\n\n      // Compute the new tree layout.\n      var nodes = treeData.descendants(),\n          links = treeData.descendants().slice(1);\n\n      // Normalize for fixed-depth.\n      nodes.forEach(function(d,i){\n          console.log(i + \", d.depth \" + d.depth);\n          d.y = 0;\n          switch(d.depth) {\n              case 6 : d.y += 90;\n              case 5 : d.y += 90;\n              case 4 : d.y += 90;\n              case 3 : d.y += 90;\n              case 2 : d.y += 50;\n              case 1 : d.y += 50;\n              case 0 : d.y += -70; break;\n              default: d.y = d.depth * 90;\n          }\n      });\n\n      // ****************** Nodes section ***************************\n\n      // Update the nodes...\n      var node = svg.selectAll('g.node')\n          .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n      // Enter any new modes at the parent's previous position.\n      var nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"id\", function(d) { return 'g-' + d.id; })\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on('click', click);\n\n      // Add Circle for the nodes\n      nodeEnter.append('circle')\n          .attr('class', 'node')\n          .attr('r', 1e-6)\n          .style(\"fill\", function(d) {\n              //return d._children ? \"lightsteelblue\" : \"#fff\";\n              return d.children || d._children ? \"#fff\" : \"#82b1c6\";\n          });\n\n      // Add labels for the nodes\n      nodeEnter.append('text')\n          .attr(\"dy\", \".35em\")\n          .attr(\"x\", function(d) {\n              //return d.children || d._children ? -13 : 13;\n              return -13;\n          })\n          .attr(\"text-anchor\", function(d) {\n              //return d.children || d._children ? \"end\" : \"start\";\n              return \"end\";\n          })\n          .text(function(d) { return d.data.name; });\n\n      // UPDATE\n      var nodeUpdate = nodeEnter.merge(node);\n\n      // Transition to the proper position for the node\n      nodeUpdate.transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n          });\n\n      // Update the node attributes and style\n      nodeUpdate.select('circle.node')\n          .attr('r', 10)\n          .style(\"fill\", function(d) {\n              //return d._children ? \"lightsteelblue\" : \"#fff\";\n\n              return d.children || d._children ? \"#fff\" : \"#82b1c6\";\n          })\n          .attr('cursor', 'pointer');\n\n\n      // Remove any exiting nodes\n      var nodeExit = node.exit().transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n      // On exit reduce the node circles size to 0\n      nodeExit.select('circle')\n          .attr('r', 1e-6);\n\n      // On exit reduce the opacity of text labels\n      nodeExit.select('text')\n          .style('fill-opacity', 1e-6);\n\n      // ****************** links section ***************************\n\n      // Update the links...\n      var link = svg.selectAll('path.link')\n          .data(links, function(d) { return d.id; });\n\n      // Enter any new links at the parent's previous position.\n      var linkEnter = link.enter().insert('path', \"g\")\n          .attr(\"class\", \"link\")\n          .attr('d', function(d){\n              var o = {x: source.x0, y: source.y0}\n              return diagonal(o, o)\n          });\n\n      // UPDATE\n      var linkUpdate = linkEnter.merge(link);\n\n      // Transition back to the parent element position\n      linkUpdate.transition()\n          .duration(duration)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n      // Remove any exiting links\n      var linkExit = link.exit().transition()\n          .duration(duration)\n          .attr('d', function(d) {\n              var o = {x: source.x, y: source.y}\n              return diagonal(o, o)\n          })\n          .remove();\n\n      // Store the old positions for transition.\n      nodes.forEach(function(d){\n          d.x0 = d.x;\n          d.y0 = d.y;\n      });\n\n      // Creates a curved (diagonal) path from parent to the child nodes\n      function diagonal(s, d) {\n\n          var path = `M ${s.y} ${s.x}\n            C ${(s.y + d.y) / 2} ${s.x},\n              ${(s.y + d.y) / 2} ${d.x},\n              ${d.y} ${d.x}`\n\n          return path\n      }\n\n      // Toggle children on click.\n      function click(d) {\n          if (d.children) {\n              d._children = d.children;\n              d.children = null;\n          } else {\n              d.children = d._children;\n              d._children = null;\n          }\n          update(d);\n\n          let index = -1;\n\n          d3.selectAll(\"g.node\").attr('class', 'node');\n\n          if (d.data.index || d.data.index >= 0) {\n              index = d.data.index;\n\n              d3.select(\"#g-\" + d.id).attr('class', 'node select');\n              d3.select(\"#g-\" + d.id).select('circle.node')\n                  .style(\"fill\", \"#f398b0\");\n          }\n          _this.selectedSegmentationIndex = index;\n          _this.chartClick.emit(d);\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { ChartOptions } from 'chart.js';\n\n@Component({\n  selector: 'lib-variable-width-chart',\n  templateUrl: './variable-width-chart.component.html',\n  styleUrls: ['./variable-width-chart.component.scss']\n})\nexport class VariableWidthChartComponent implements OnInit {\n\n  public generatedChartData: Array<any> = [{\n    type: 'line',\n    label: '',\n    data: [{y:0, x:0}, {y:0, x:0}],\n  }];\n\n  public generatedChartColors: Array<any> = [{\n    fill: true,\n    backgroundColor: '#000000',\n    pointRadius: 0,\n  }];\n\n  @ViewChild(BaseChartDirective) public chart: BaseChartDirective;\n  @Input() variableWidthChartData: Array<VariableWidthChartData>;\n  @Input() limitLineData: LimitLineData;\n  @Input() variableWidthChartLegend: boolean = true;\n  @Input() variableWidthChartOptions: ChartOptions = {};\n\n  constructor() { \n  }\n\n  ngOnInit() {\n    \n    if (!this.variableWidthChartOptions || Object.keys(this.variableWidthChartOptions).length == 0) {\n      this.variableWidthChartOptions = new GlobalChartOptions().variableWidthChartOptions;      \n    }    \n    this.buildChartData();\n  }\n\n  private buildChartData() {\n\n    if (!this.variableWidthChartData) {\n      return;\n    }\n\n    this.generatedChartData = [];\n    this.generatedChartColors = [];\n\n    let _this = this;    \n    let start = 0;\n    let index = 1;\n    let previousState = -1;\n    this.variableWidthChartData.map(function(d) {\n        let end = start + d.xValue;\n        _this.generatedChartData.push({\n            type: 'line',\n            label: d.label,\n            data: [{x: start, y: d.yValue}, {x: end, y: d.yValue}]\n        });\n\n        if (previousState == d.state) {\n            index++;\n        } else {\n            previousState = d.state; \n            index = 0;\n        }\n        _this.generatedChartColors.push(_this.getVolumeAllocationColor(d.state, index));\n\n        start = end;\n    });\n\n    if (this.limitLineData) {\n      this.generatedChartData.unshift({\n          type: 'line', \n          label: this.limitLineData.label, \n          data: [{x: this.limitLineData.xValue, y: 0}, {x: this.limitLineData.xValue, y: 1250}]\n      });\n\n      this.generatedChartColors.unshift(this.limitLineColor);\n    }\n\n    _this.chart.update();\n\n  }\n\n  public limitLineColor: any = { // red\n\n      fill:false,\n      borderColor: 'rgba(235, 84, 124, 1)',\n      borderWidth: 1.5,\n      borderDash: [5,5],\n      pointRadius: 0,\n      pointHitRadius: 10,\n\n      pointHoverRadius: 5,\n      pointHoverBorderWidth: 5,\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(235, 84, 124, 1)',\n\n      cubicInterpolationMode: 'monotone',\n  };\n\n  private volumeAllocaitonColors : Array<Array<string>> = [\n    ['#45a090', '#5fbaaa', '#82c9bd','#a6d8d0','#cae8e3'],\n    ['#2a90bb', '#35a3d2', '#5fb6db', '#7bc3e1', '#a4d6eb'],\n    ['#ec5f85'],\n    ['#a6a6a5', '#b7b7b6', '#c8c8c7', '#d9d9d8']\n  ]\n\n  private getVolumeAllocationColor(state: number, index: number) : any {\n\n      let bg = this.volumeAllocaitonColors[0][0];\n      let border = this.volumeAllocaitonColors[0][0];\n\n      // state : 0=win, 1=confirm, 2=current, 4=balance\n      let color = this.volumeAllocaitonColors[state];\n      bg = color[index%color.length];\n      border = bg;\n\n      return  {\n          fill: true,\n          backgroundColor: bg,\n          borderColor: border,\n          borderWidth: 1,\n          pointRadius: 0,\n\n          pointHitRadius: 10,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 5,\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(235,84,124,1)',\n\n          cubicInterpolationMode:'monotone',\n      }\n  }\n}\n\nexport interface VariableWidthChartData {\n\n  label: string;\n  xValue: number;\n  yValue: number;\n  state: number;\n}\n\nexport interface LimitLineData {\n  label: string;\n  xValue: number;\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport * as d3 from 'd3';\nimport { GlobalChartColors } from '../global-chart-colors';\nimport { GlobalChartOptions } from '../global-chart-options';\nimport { max } from 'moment';\n\n\n@Component({\n  selector: 'lib-waterfall-chart',\n  templateUrl: './waterfall-chart.component.html',\n  styleUrls: ['./waterfall-chart.component.scss']\n})\nexport class WaterfallChartComponent implements OnInit, OnChanges {\n\n  @Input() waterfallChartData: WaterfallChartData[];\n  @Input() waterfallExtendedChartData: WaterfallChartData[];\n  @Input() waterfallChartOptions: any = {};\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n\n  waterfallData: any[] = [];\n\n  waterfallChartConfig: any = {\n    displayModeBar: false,\n    displaylogo: false,\n    modeBarButtonsToRemove: ['pan2d', 'lasso2d']\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataProcessing();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['waterfallChartData']) {\n      this.dataProcessing();\n    }\n  }\n\n  dataProcessing() {\n    if (!this.waterfallChartOptions || Object.keys(this.waterfallChartOptions).length == 0) {\n      this.waterfallChartOptions = new GlobalChartOptions().waterfallChartOptions;\n    }\n    let datasetIndex: number = 0;\n    let comparedIndex: number = 0;\n    let _this = this;\n    this.waterfallChartData.forEach(chartData => {\n\n      let measures: string[] = [];\n      let xLabels: string[] = [];\n      let dataLabels: string[] = [];\n      let yValues: number[] = [];\n      let hoverinfos: string[] = [];\n      let index: number = 0;\n\n      chartData.waterfallItemData.forEach(itemData => {\n\n        if (!itemData.hidden) {\n          measures.push(itemData.measure);\n          dataLabels.push(itemData.dataLabel);\n          yValues.push(itemData.value);\n          hoverinfos.push('all');\n        } else {\n          measures.push('absolute');\n          dataLabels.push('');\n          yValues.push(0);\n          hoverinfos.push('none');\n        }\n        if (itemData.compared) {\n          comparedIndex = index;\n        }\n\n        xLabels.push(itemData.itemlabel);\n        index++;\n      });\n\n      if (_this.waterfallExtendedChartData && _this.waterfallExtendedChartData[datasetIndex]) {\n\n        measures.push('absolute');\n        dataLabels.push('');\n        yValues.push(0);\n        hoverinfos.push('none');\n        xLabels.push('');\n\n        _this.waterfallExtendedChartData[datasetIndex].waterfallItemData.forEach(extendedData => {\n          if (!extendedData.hidden) {\n            measures.push(extendedData.measure);\n            dataLabels.push(extendedData.dataLabel);\n            yValues.push(extendedData.value);\n            hoverinfos.push('all');\n          } else {\n            measures.push('absolute');\n            dataLabels.push('');\n            yValues.push(0);\n            hoverinfos.push('none');\n          }\n          xLabels.push(extendedData.itemlabel);\n        });\n      }\n\n      if (!chartData.connectorColor) {\n        chartData.connectorColor = 'rgba(36,123,160,0.5)';\n      }\n      if (!chartData.connectorWidth) {\n        chartData.connectorWidth = 1;\n      }\n      let data = {\n        name: chartData.name,\n        type: 'waterfall',\n        orientation: 'v',\n        measure: measures,\n        x: xLabels,\n        textposition: 'outside',\n        text: dataLabels,\n        y: yValues,\n        connector: {\n          line: {\n            color: chartData.connectorColor,\n            width: chartData.connectorWidth,\n          }\n        },\n        hoverinfo: hoverinfos,\n        decreasing: { marker: { color: chartData.decreasingColor } },\n        increasing: { marker: { color: chartData.increasingColor } },\n        totals: { marker: { color: chartData.totalsColor } }\n\n      }\n\n      this.waterfallData.push(data);\n      datasetIndex++;\n\n    });\n\n    if (this.waterfallExtendedChartData) {\n      let min: number = 0;\n      let max: number = 0;\n      let comparedValue: number = 0;\n\n      this.waterfallData.forEach(data => {\n        let total: number = 0;\n        let i: number = 0;\n        data.measure.forEach(measure => {\n          if (measure == 'absolute') {\n            total = data.y[i];\n          } else if (measure == 'relative') {\n            total += data.y[i];\n          }\n          if (total > max) {\n            max = total;\n          }\n          if (total < min) {\n            min = total;\n          }\n          if (i == comparedIndex) {\n            comparedValue = total;\n          }\n          i++;\n        });\n      });\n\n      this.waterfallChartOptions.shapes = [{\n        x0: this.waterfallChartData[0].waterfallItemData.length,\n        x1: this.waterfallChartData[0].waterfallItemData.length,\n        y0: min,\n        y1: max,\n        line: {\n          dash: 'solid',\n          color: '#444444',\n          width: 3\n        },\n        type: 'line',\n        xref: 'x',\n        yref: 'y',\n        opacity: 0.3,\n        fillcolor: '#7f7f7f'\n      }, {\n        x0: comparedIndex,\n        x1: this.waterfallChartData[0].waterfallItemData.length + 1,\n        y0: comparedValue,\n        y1: comparedValue,\n        line: {\n          dash: 'dash',\n          color: '#444444',\n          width: 3\n        },\n        type: 'line',\n        xref: 'x',\n        yref: 'y',\n        opacity: 0.3,\n        fillcolor: '#7f7f7f'\n      }];\n\n      this.waterfallChartOptions.annotations = [{\n        x: Math.ceil(this.waterfallChartData[0].waterfallItemData.length / 2),\n        y: max * 1.1,\n        text: '<b>' + this.waterfallChartData[0].name + '</b>',\n        font: { color: 'rgb(60, 55, 201)' },\n        showarrow: false\n\n      }, {\n        x: this.waterfallChartData[0].waterfallItemData.length\n          + Math.ceil(this.waterfallExtendedChartData[0].waterfallItemData.length / 2),\n        y: max * 1.1,\n        text: '<b>' + this.waterfallExtendedChartData[0].name + '</b>',\n        font: { color: 'rgb(60, 55, 201)' },\n        showarrow: false\n      }];\n    }\n  }\n\n  public chartClicked(event: any) {\n\n    if (!(event instanceof MouseEvent)) {\n      this.chartClick.emit(event);\n    }\n  }\n\n  public chartHovered(event: any) {\n\n    this.chartHover.emit(event);\n  }\n\n  public chartAfterPlotted(event: any) {\n\n    let _this = this;\n    d3.selectAll('.xaxislayer-above').selectAll('text').on('click', function (d) {\n\n      _this.labelClick.emit(d.text);\n    });\n  }\n}\n\nexport class WaterfallChartData {\n\n  name: string;\n  connectorColor?: string;\n  connectorWidth?: number;\n  waterfallItemData: WaterfallItemData[];\n  decreasingColor?: string = GlobalChartColors.globalBackgroundColors[0];\n  increasingColor?: string = GlobalChartColors.globalBackgroundColors[1];;\n  totalsColor?: string = GlobalChartColors.globalBackgroundColors[2];;\n}\n\nexport class WaterfallItemData {\n\n  measure: string;\n  itemlabel: string;\n  value: number;\n  dataLabel: string;\n  hidden?: boolean = false;\n  compared?: boolean = false;\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport * as waterfallPlugin from 'chartjs-plugin-waterfall';\n\n@Component({\n  selector: 'lib-waterfall-plugin-chart',\n  templateUrl: './waterfall-plugin-chart.component.html',\n  styleUrls: ['./waterfall-plugin-chart.component.scss']\n})\nexport class WaterfallPluginChartComponent implements OnInit, OnChanges {\n\n  @Input() waterfallPluginChartData: WaterfallPluginChartData[];\n\n  chartData: Chart.ChartData;\n  plugins = [waterfallPlugin];\n\n  @Output() chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() chartHover: EventEmitter<any> = new EventEmitter();\n  \n  constructor() {\n  }\n\n  ngOnInit() {\n    this.adaptDataForPlugin();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  private adaptDataForPlugin() {\n    if (!this.waterfallPluginChartData) {\n      return;\n    }\n\n    const adaptedData = [];\n    let currentTotal = 0;\n\n    this.waterfallPluginChartData.forEach((v, idx) => {\n\n      if (!!v.total) {\n        currentTotal = v.data;\n      } else {\n        if (v.data < 0) {\n          currentTotal += v.data;\n        }\n\n        adaptedData.push({\n          data: [currentTotal],\n          waterfall: {\n            dummyStack: true\n          },\n          stack: `${idx}`\n        });\n\n        if (v.data > 0) {\n          currentTotal += v.data;\n        }\n      }\n\n      if (v.backgroundColor) {\n        adaptedData.push({\n          label: v.label,\n          data: [Math.abs(v.data)],\n          backgroundColor: v.backgroundColor,\n          stack: `${idx}`\n        });\n      } else {\n        let backgroundColor: string[] = [];\n        if (v.total) {\n          backgroundColor = ['rgba(255, 99, 132, 0.5)'];\n        } else {\n          if (v.data > 0) {\n            backgroundColor = ['rgba(54, 162, 235, 0.5)'];\n          } else {\n            backgroundColor = ['rgba(255, 206, 86, 0.5)'];\n          }\n        }\n        adaptedData.push({\n          label: v.label,\n          data: [Math.abs(v.data)],\n          backgroundColor: backgroundColor,\n          stack: `${idx}`\n        });\n      }\n    });\n\n    this.chartData = {\n      labels: ['Waterfall Model'],\n      datasets: adaptedData\n    };\n  }\n\n  options = {    \n    plugins: {\n      datalabels: {\n        display: false,\n      },\n      waterFallPlugin: {\n        stepLines: {\n          enabled: false,          \n        },\n      },\n    },    \n  }\n\n  public chartClicked(event: any) {\n \n    this.chartClick.emit(event);\n  }\n\n  public chartHovered(event: any) {\n  \n    this.chartHover.emit(event);\n  }\n}\n\nexport interface WaterfallPluginChartData {\n  label: string;\n  data: number;\n  backgroundColor?: string;\n  // marks data as total\n  total?: boolean;\n}","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport * as Chart from 'chart.js';\n\n@Component({\n  selector: 'lib-base-chart',\n  templateUrl: './base-chart.component.html'\n})\nexport class BaseChartComponent implements OnInit, OnDestroy, OnChanges {\n  \n  @ViewChild('chartCanvas') canvasRef: ElementRef;\n\n  @Input() type: Chart.ChartType;\n  @Input() data: Chart.ChartData;\n  @Input() options: Chart.ChartOptions;\n  @Input() plugins: any;\n\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\n\n  private _options: Chart.ChartOptions;\n  private _chart: Chart;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n    if (this.options) {\n\n      const opt = Object.assign(Object.create(Object.getPrototypeOf(this.options)), this.options);\n\n      opt.onClick = (event?: MouseEvent, active?: {}[]) => {        \n        this.chartClicked(event, active);        \n      };\n\n      opt.hover = opt.hover || {};\n      opt.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        this.chartHovered(event, active);      \n      };      \n      this._options = opt;\n\n    } else {\n      \n      const opt: Chart.ChartOptions = {};\n      opt.onClick = (event?: MouseEvent, active?: {}[]) => {        \n        this.chartClicked(event, active);\n      };\n\n      opt.hover = opt.hover || {};\n      opt.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        this.chartHovered(event, active);        \n      };\n\n      this._options = opt;\n    }\n\n    this._chart = new Chart(this.canvasRef.nativeElement, {\n      type: this.type,\n      data: this.data,\n      options: this._options,\n      plugins: this.plugins      \n    });\n  }\n\n  private chartClicked(event: MouseEvent, chartObj: any) {\n    this.chartClick.emit(chartObj);\n  }\n\n  private chartHovered(event: MouseEvent, chartObj: any) {\n    this.chartHover.emit(chartObj);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n\n  ngOnDestroy(): void {\n    if (this._chart) {\n      this._chart.destroy();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartLibComponent } from './chart-lib.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule } from 'ng2-charts';\nimport { PlotlyModule } from 'angular-plotly.js';\nimport * as PlotlyJS from 'plotly.js/dist/plotly.js';\nimport { BoxPlotChartComponent } from './box-plot-chart/box-plot-chart.component';\nimport { CombinedCategoryChartComponent } from './combined-chart/combined-category-chart.component';\nimport { CombinedMeasureChartComponent } from './combined-chart/combined-measure-chart.component';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { PieChartComponent } from './pie-chart/pie-chart.component';\nimport { ScatterChartComponent } from './scatter-chart/scatter-chart.component';\nimport { TreeLayoutChartComponent } from './tree-layout-chart/tree-layout-chart.component';\nimport { VariableWidthChartComponent } from './variable-width-chart/variable-width-chart.component';\nimport { WaterfallChartComponent } from './waterfall-chart/waterfall-chart.component';\nimport { WaterfallPluginChartComponent } from './waterfall-plugin-chart/waterfall-plugin-chart.component';\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\nPlotlyModule.plotlyjs = PlotlyJS;\n\n@NgModule({\n  declarations: [\n    ChartLibComponent, \n    BarChartComponent,\n    BoxPlotChartComponent,\n    CombinedCategoryChartComponent,\n    CombinedMeasureChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    ScatterChartComponent,\n    TreeLayoutChartComponent,\n    VariableWidthChartComponent,\n    WaterfallChartComponent,\n    WaterfallPluginChartComponent,\n    BaseChartComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartsModule,\n    PlotlyModule\n  ],\n  exports: [\n    ChartLibComponent,\n    BarChartComponent,\n    BoxPlotChartComponent,\n    CombinedCategoryChartComponent,\n    CombinedMeasureChartComponent,\n    LineChartComponent,\n    PieChartComponent,\n    ScatterChartComponent,\n    TreeLayoutChartComponent,\n    VariableWidthChartComponent,\n    WaterfallChartComponent,\n    WaterfallPluginChartComponent,\n    BaseChartComponent\n  ]\n})\nexport class ChartLibModule { }\n"]}